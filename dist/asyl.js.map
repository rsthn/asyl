{"mappings":"kpBAAA,IAAWA,EAGSC,EAkCdC,E,EArCNC,EAAA,S,OAAWH,EA2CTI,OANIF,EAhCE,mBAFYD,EAkCMD,EAAEK,MAhCuBJ,EAI3C,mBAAeK,EACV,SAAwBC;;;;AAI7B,OAAO,IAAAD,EAAWC,EAAG,UAAUC,SAAS,S,EAKxC,iBAAoBR,EAAES,SAGjB,SAA2BF,GAChC,IAAIG,EAAMV,EAAES,SAASE,eAAeJ,GACpC,OAAOK,MAAMC,UAAUC,IAAIC,KAAKL,GAAK,SAAUM,GAC7C,OAAOC,OAAOC,aAAaF,E,IAC1BG,KAAK,G,EAIP,WAEN,MAAM,IAAIC,MAAM,0G,EAMjBpB,EAAEK,KAAOH,EAELmB,GAA0CA,EAAOC,UACnDD,EAAOC,QAAUpB,E,sCCxBrB,IAAAqB,EAEAC,E,uHAPA,MAAMC,EACe,mBAAXC,QAAkD,mBAAlBA,OAAY,IAChDA,OAAY,IAAE,8BACd,KAENH,EAAiBI,EAEjBH,EAA4B,GAE5B,MAAMI,EAAe,WAwDrB,SAASC,EAAcC,GACrB,GAAIA,EAASF,EACX,MAAM,IAAIG,WAAW,cAAgBD,EAAS,kCAGhD,MAAMpB,EAAM,IAAIsB,WAAWF,GAE3B,OADAG,OAAOC,eAAexB,EAAKiB,EAAOd,WAC3BH,C,CAaT,SAASiB,EAAQQ,EAAKC,EAAkBN,GAEtC,GAAmB,iBAARK,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAIC,UACR,sEAGJ,OAAOC,EAAYH,E,CAErB,OAAOI,EAAKJ,EAAKC,EAAkBN,E,CAKrC,SAASS,EAAMC,EAAOJ,EAAkBN,GACtC,GAAqB,iBAAVU,EACT,OAqHJ,SAAqBC,EAAQC,GACH,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAKf,EAAOgB,WAAWD,GACrB,MAAM,IAAIL,UAAU,qBAAuBK,GAG7C,MAAMZ,EAAwC,EAA/Bc,EAAWH,EAAQC,GAClC,IAAIhC,EAAMmB,EAAaC,GAEvB,MAAMe,EAASnC,EAAIoC,MAAML,EAAQC,GAE7BG,IAAWf,IAIbpB,EAAMA,EAAIqC,MAAM,EAAGF,IAGrB,OAAOnC,C,CA1IEsC,CAAWR,EAAOJ,GAG3B,GAAIa,YAAYC,OAAOV,GACrB,OAkJJ,SAAwBW,GACtB,GAAIC,EAAWD,EAAWnB,YAAa,CACrC,MAAMqB,EAAO,IAAIrB,WAAWmB,GAC5B,OAAOG,EAAgBD,EAAKE,OAAQF,EAAKG,WAAYH,EAAKI,W,CAE5D,OAAOC,EAAcP,E,CAvJZQ,CAAcnB,GAGvB,GAAa,MAATA,EACF,MAAM,IAAIH,UACR,yHACiDG,GAIrD,GAAIY,EAAWZ,EAAOS,cACjBT,GAASY,EAAWZ,EAAMe,OAAQN,aACrC,OAAOK,EAAgBd,EAAOJ,EAAkBN,GAGlD,GAAiC,oBAAtB8B,oBACNR,EAAWZ,EAAOoB,oBAClBpB,GAASY,EAAWZ,EAAMe,OAAQK,oBACrC,OAAON,EAAgBd,EAAOJ,EAAkBN,GAGlD,GAAqB,iBAAVU,EACT,MAAM,IAAIH,UACR,yEAIJ,MAAMwB,EAAUrB,EAAMqB,SAAWrB,EAAMqB,UACvC,GAAe,MAAXA,GAAmBA,IAAYrB,EACjC,OAAOb,EAAOmC,KAAKD,EAASzB,EAAkBN,GAGhD,MAAMiC,EAkJR,SAAqBC,GACnB,GAAIrC,EAAOsC,SAASD,GAAM,CACxB,MAAME,EAA4B,EAAtBC,EAAQH,EAAIlC,QAClBpB,EAAMmB,EAAaqC,GAEzB,OAAmB,IAAfxD,EAAIoB,QAIRkC,EAAIX,KAAK3C,EAAK,EAAG,EAAGwD,GAHXxD,C,CAOX,QAAmB0D,IAAfJ,EAAIlC,OACN,MAA0B,iBAAfkC,EAAIlC,QAAuBuC,EAAYL,EAAIlC,QAC7CD,EAAa,GAEf6B,EAAcM,GAGvB,GAAiB,WAAbA,EAAIM,MAAqB1D,MAAM2D,QAAQP,EAAIQ,MAC7C,OAAOd,EAAcM,EAAIQ,K,CAvKjBC,CAAWjC,GACrB,GAAIuB,EAAG,OAAOA,EAEd,GAAsB,oBAAXrC,QAAgD,MAAtBA,OAAOgD,aACH,mBAA9BlC,EAAMd,OAAOgD,aACtB,OAAO/C,EAAOmC,KAAKtB,EAAMd,OAAOgD,aAAa,UAAWtC,EAAkBN,GAG5E,MAAM,IAAIO,UACR,yHACiDG,E,CAqBrD,SAASmC,EAAYC,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAIvC,UAAU,0CACf,GAAIuC,EAAO,EAChB,MAAM,IAAI7C,WAAW,cAAgB6C,EAAO,iC,CA4BhD,SAAStC,EAAasC,GAEpB,OADAD,EAAWC,GACJ/C,EAAa+C,EAAO,EAAI,EAAoB,EAAhBT,EAAQS,G,CAwC7C,SAASlB,EAAemB,GACtB,MAAM/C,EAAS+C,EAAM/C,OAAS,EAAI,EAA4B,EAAxBqC,EAAQU,EAAM/C,QAC9CpB,EAAMmB,EAAaC,GACzB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,EAAQgD,GAAK,EAC/BpE,EAAIoE,GAAgB,IAAXD,EAAMC,GAEjB,OAAOpE,C,CAWT,SAAS4C,EAAiBuB,EAAOrB,EAAY1B,GAC3C,GAAI0B,EAAa,GAAKqB,EAAMpB,WAAaD,EACvC,MAAM,IAAIzB,WAAW,wCAGvB,GAAI8C,EAAMpB,WAAaD,GAAc1B,GAAU,GAC7C,MAAM,IAAIC,WAAW,wCAGvB,IAAIrB,EAYJ,OAVEA,OADiB0D,IAAfZ,QAAuCY,IAAXtC,EACxB,IAAIE,WAAW6C,QACDT,IAAXtC,EACH,IAAIE,WAAW6C,EAAOrB,GAEtB,IAAIxB,WAAW6C,EAAOrB,EAAY1B,GAI1CG,OAAOC,eAAexB,EAAKiB,EAAOd,WAE3BH,C,CA4BT,SAASyD,EAASrC,GAGhB,GAAIA,GAAUF,EACZ,MAAM,IAAIG,WAAW,0DACaH,EAAapB,SAAS,IAAM,UAEhE,OAAgB,EAATsB,C,CAuGT,SAASc,EAAYH,EAAQC,GAC3B,GAAIf,EAAOsC,SAASxB,GAClB,OAAOA,EAAOX,OAEhB,GAAImB,YAAYC,OAAOT,IAAWW,EAAWX,EAAQQ,aACnD,OAAOR,EAAOgB,WAEhB,GAAsB,iBAAXhB,EACT,MAAM,IAAIJ,UACR,kGAC0BI,GAI9B,MAAMyB,EAAMzB,EAAOX,OACbiD,EAAaC,UAAUlD,OAAS,IAAsB,IAAjBkD,UAAU,GACrD,IAAKD,GAAqB,IAARb,EAAW,OAAO,EAGpC,IAAIe,GAAc,EAClB,OACE,OAAQvC,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOwB,EACT,IAAK,OACL,IAAK,QACH,OAAOgB,EAAYzC,GAAQX,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANoC,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOiB,EAAc1C,GAAQX,OAC/B,QACE,GAAImD,EACF,OAAOF,GAAY,EAAKG,EAAYzC,GAAQX,OAE9CY,GAAY,GAAKA,GAAU0C,cAC3BH,GAAc,E,CAMtB,SAASI,EAAc3C,EAAU4C,EAAOC,GACtC,IAAIN,GAAc,EAclB,SALcb,IAAVkB,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQE,KAAK1D,OACf,MAAO,GAOT,SAJYsC,IAARmB,GAAqBA,EAAMC,KAAK1D,UAClCyD,EAAMC,KAAK1D,QAGTyD,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFK5C,IAAUA,EAAW,iBAGhBA,GACN,IAAK,MACH,OAAO+C,EAASD,KAAMF,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAOG,EAAUF,KAAMF,EAAOC,GAEhC,IAAK,QACH,OAAOI,EAAWH,KAAMF,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOK,EAAYJ,KAAMF,EAAOC,GAElC,IAAK,SACH,OAAOM,EAAYL,KAAMF,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOO,EAAaN,KAAMF,EAAOC,GAEnC,QACE,GAAIN,EAAa,MAAM,IAAI5C,UAAU,qBAAuBK,GAC5DA,GAAYA,EAAW,IAAI0C,cAC3BH,GAAc,E,CAatB,SAASc,EAAMhC,EAAGiC,EAAGC,GACnB,MAAMnB,EAAIf,EAAEiC,GACZjC,EAAEiC,GAAKjC,EAAEkC,GACTlC,EAAEkC,GAAKnB,C,CA4IT,SAASoB,EAAsB3C,EAAQ4C,EAAK3C,EAAYd,EAAU0D,GAEhE,GAAsB,IAAlB7C,EAAOzB,OAAc,OAAO,EAmBhC,GAhB0B,iBAAf0B,GACTd,EAAWc,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAa,aACtBA,GAAa,YAGXa,EADJb,GAAcA,KAGZA,EAAa4C,EAAM,EAAK7C,EAAOzB,OAAS,GAItC0B,EAAa,IAAGA,EAAaD,EAAOzB,OAAS0B,GAC7CA,GAAcD,EAAOzB,OAAQ,CAC/B,GAAIsE,EAAK,OAAO,EACX5C,EAAaD,EAAOzB,OAAS,C,MAC7B,GAAI0B,EAAa,EAAG,CACzB,IAAI4C,EACC,OAAO,EADH5C,EAAa,C,CAUxB,GALmB,iBAAR2C,IACTA,EAAMxE,EAAOmC,KAAKqC,EAAKzD,IAIrBf,EAAOsC,SAASkC,GAElB,OAAmB,IAAfA,EAAIrE,QACC,EAEFuE,EAAa9C,EAAQ4C,EAAK3C,EAAYd,EAAU0D,GAClD,GAAmB,iBAARD,EAEhB,OADAA,GAAY,IACgC,mBAAjCnE,WAAWnB,UAAUyF,QAC1BF,EACKpE,WAAWnB,UAAUyF,QAAQvF,KAAKwC,EAAQ4C,EAAK3C,GAE/CxB,WAAWnB,UAAU0F,YAAYxF,KAAKwC,EAAQ4C,EAAK3C,GAGvD6C,EAAa9C,EAAQ,CAAC4C,GAAM3C,EAAYd,EAAU0D,GAG3D,MAAM,IAAI/D,UAAU,uC,CAGtB,SAASgE,EAAcG,EAAKL,EAAK3C,EAAYd,EAAU0D,GACrD,IA0BItB,EA1BA2B,EAAY,EACZC,EAAYF,EAAI1E,OAChB6E,EAAYR,EAAIrE,OAEpB,QAAiBsC,IAAb1B,IAEe,UADjBA,EAAWzB,OAAOyB,GAAU0C,gBACY,UAAb1C,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAI8D,EAAI1E,OAAS,GAAKqE,EAAIrE,OAAS,EACjC,OAAO,EAET2E,EAAY,EACZC,GAAa,EACbC,GAAa,EACbnD,GAAc,C,CAIlB,SAASoD,EAAMlG,EAAKoE,GAClB,OAAkB,IAAd2B,EACK/F,EAAIoE,GAEJpE,EAAImG,aAAa/B,EAAI2B,E,CAKhC,GAAIL,EAAK,CACP,IAAIU,GAAa,EACjB,IAAKhC,EAAItB,EAAYsB,EAAI4B,EAAW5B,IAClC,GAAI8B,EAAKJ,EAAK1B,KAAO8B,EAAKT,GAAoB,IAAfW,EAAoB,EAAIhC,EAAIgC,IAEzD,IADmB,IAAfA,IAAmBA,EAAahC,GAChCA,EAAIgC,EAAa,IAAMH,EAAW,OAAOG,EAAaL,OAEvC,IAAfK,IAAmBhC,GAAKA,EAAIgC,GAChCA,GAAa,C,MAKjB,IADItD,EAAamD,EAAYD,IAAWlD,EAAakD,EAAYC,GAC5D7B,EAAItB,EAAYsB,GAAK,EAAGA,IAAK,CAChC,IAAIiC,GAAQ,EACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAWK,IAC7B,GAAIJ,EAAKJ,EAAK1B,EAAIkC,KAAOJ,EAAKT,EAAKa,GAAI,CACrCD,GAAQ,EACR,K,CAGJ,GAAIA,EAAO,OAAOjC,C,CAItB,OAAO,C,CAeT,SAASmC,EAAUvG,EAAK+B,EAAQyE,EAAQpF,GACtCoF,EAASC,OAAOD,IAAW,EAC3B,MAAME,EAAY1G,EAAIoB,OAASoF,EAC1BpF,GAGHA,EAASqF,OAAOrF,IACHsF,IACXtF,EAASsF,GAJXtF,EAASsF,EAQX,MAAMC,EAAS5E,EAAOX,OAKtB,IAAIgD,EACJ,IAJIhD,EAASuF,EAAS,IACpBvF,EAASuF,EAAS,GAGfvC,EAAI,EAAGA,EAAIhD,IAAUgD,EAAG,CAC3B,MAAMwC,EAASC,SAAS9E,EAAO+E,OAAW,EAAJ1C,EAAO,GAAI,IACjD,GAAIT,EAAYiD,GAAS,OAAOxC,EAChCpE,EAAIwG,EAASpC,GAAKwC,C,CAEpB,OAAOxC,C,CAGT,SAAS2C,EAAW/G,EAAK+B,EAAQyE,EAAQpF,GACvC,OAAO4F,EAAWxC,EAAYzC,EAAQ/B,EAAIoB,OAASoF,GAASxG,EAAKwG,EAAQpF,E,CAG3E,SAAS6F,EAAYjH,EAAK+B,EAAQyE,EAAQpF,GACxC,OAAO4F,EAypCT,SAAuBE,GACrB,MAAMC,EAAY,GAClB,IAAK,IAAI/C,EAAI,EAAGA,EAAI8C,EAAI9F,SAAUgD,EAEhC+C,EAAUC,KAAyB,IAApBF,EAAIG,WAAWjD,IAEhC,OAAO+C,C,CA/pCWG,CAAavF,GAAS/B,EAAKwG,EAAQpF,E,CAGvD,SAASmG,EAAavH,EAAK+B,EAAQyE,EAAQpF,GACzC,OAAO4F,EAAWvC,EAAc1C,GAAS/B,EAAKwG,EAAQpF,E,CAGxD,SAASoG,EAAWxH,EAAK+B,EAAQyE,EAAQpF,GACvC,OAAO4F,EA0pCT,SAAyBE,EAAKO,GAC5B,IAAIC,EAAGC,EAAIC,EACX,MAAMT,EAAY,GAClB,IAAK,IAAI/C,EAAI,EAAGA,EAAI8C,EAAI9F,WACjBqG,GAAS,GAAK,KADarD,EAGhCsD,EAAIR,EAAIG,WAAWjD,GACnBuD,EAAKD,GAAK,EACVE,EAAKF,EAAI,IACTP,EAAUC,KAAKQ,GACfT,EAAUC,KAAKO,GAGjB,OAAOR,C,CAvqCWU,CAAe9F,EAAQ/B,EAAIoB,OAASoF,GAASxG,EAAKwG,EAAQpF,E,CA+E9E,SAAS+D,EAAanF,EAAK4E,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQ7E,EAAIoB,OACtB0G,EAAAC,cAAqB/H,GAErB8H,EAAAC,cAAqB/H,EAAIqC,MAAMuC,EAAOC,G,CAIjD,SAASG,EAAWhF,EAAK4E,EAAOC,GAC9BA,EAAMmD,KAAKC,IAAIjI,EAAIoB,OAAQyD,GAC3B,MAAMqD,EAAM,GAEZ,IAAI9D,EAAIQ,EACR,KAAOR,EAAIS,GAAK,CACd,MAAMsD,EAAYnI,EAAIoE,GACtB,IAAIgE,EAAY,KACZC,EAAmBF,EAAa,IAChC,EACAA,EAAa,IACT,EACAA,EAAa,IACT,EACA,EAEZ,GAAI/D,EAAIiE,GAAoBxD,EAAK,CAC/B,IAAIyD,EAAYC,EAAWC,EAAYC,EAEvC,OAAQJ,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EACHG,EAAatI,EAAIoE,EAAI,GACO,MAAV,IAAbkE,KACHG,GAA6B,GAAZN,IAAqB,EAAoB,GAAbG,EACzCG,EAAgB,MAClBL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAatI,EAAIoE,EAAI,GACrBmE,EAAYvI,EAAIoE,EAAI,GACQ,MAAV,IAAbkE,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZN,IAAoB,IAAoB,GAAbG,IAAsB,EAAmB,GAAZC,EACrEE,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAatI,EAAIoE,EAAI,GACrBmE,EAAYvI,EAAIoE,EAAI,GACpBoE,EAAaxI,EAAIoE,EAAI,GACO,MAAV,IAAbkE,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZN,IAAoB,IAAqB,GAAbG,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,EAClGC,EAAgB,OAAUA,EAAgB,UAC5CL,EAAYK,I,CAMJ,OAAdL,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbF,EAAId,KAAKgB,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBF,EAAId,KAAKgB,GACThE,GAAKiE,C,CAGP,OAQF,SAAgCK,GAC9B,MAAMlF,EAAMkF,EAAWtH,OACvB,GAAIoC,GAAOmF,EACT,OAAOpI,OAAOC,aAAaoI,MAAMrI,OAAQmI,GAI3C,IAAIR,EAAM,GACN9D,EAAI,EACR,KAAOA,EAAIZ,GACT0E,GAAO3H,OAAOC,aAAaoI,MACzBrI,OACAmI,EAAWrG,MAAM+B,EAAGA,GAAKuE,IAG7B,OAAOT,C,CAvBAW,CAAsBX,E,CA19B/BjH,EAAO6H,oBAUP,WAEE,IACE,MAAMhD,EAAM,IAAIxE,WAAW,GACrByH,EAAQ,CAAEC,IAAK,WAAc,OAAO,E,GAG1C,OAFAzH,OAAOC,eAAeuH,EAAOzH,WAAWnB,WACxCoB,OAAOC,eAAesE,EAAKiD,GACN,KAAdjD,EAAIkD,K,CACX,MAAOC,GACP,OAAO,C,EAnBkBC,GAExBjI,EAAO6H,qBAA0C,oBAAZK,SACb,mBAAlBA,QAAQC,OACjBD,QAAQC,MACN,iJAkBJ7H,OAAO8H,eAAepI,EAAOd,UAAW,SAAU,CAChDmJ,YAAY,EACZC,IAAK,WACH,GAAKtI,EAAOsC,SAASuB,MACrB,OAAOA,KAAKjC,M,IAIhBtB,OAAO8H,eAAepI,EAAOd,UAAW,SAAU,CAChDmJ,YAAY,EACZC,IAAK,WACH,GAAKtI,EAAOsC,SAASuB,MACrB,OAAOA,KAAKhC,U,IAqChB7B,EAAOuI,SAAW,KA8DlBvI,EAAOmC,KAAO,SAAUtB,EAAOJ,EAAkBN,GAC/C,OAAOS,EAAKC,EAAOJ,EAAkBN,E,EAKvCG,OAAOC,eAAeP,EAAOd,UAAWmB,WAAWnB,WACnDoB,OAAOC,eAAeP,EAAQK,YA8B9BL,EAAOwI,MAAQ,SAAUvF,EAAMwF,EAAM1H,GACnC,OArBF,SAAgBkC,EAAMwF,EAAM1H,GAE1B,OADAiC,EAAWC,GACPA,GAAQ,EACH/C,EAAa+C,QAETR,IAATgG,EAIyB,iBAAb1H,EACVb,EAAa+C,GAAMwF,KAAKA,EAAM1H,GAC9Bb,EAAa+C,GAAMwF,KAAKA,GAEvBvI,EAAa+C,E,CAQbyF,CAAMzF,EAAMwF,EAAM1H,E,EAW3Bf,EAAO2I,YAAc,SAAU1F,GAC7B,OAAOtC,EAAYsC,E,EAKrBjD,EAAO4I,gBAAkB,SAAU3F,GACjC,OAAOtC,EAAYsC,E,EA8GrBjD,EAAOsC,SAAW,SAAmBF,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAEyG,WACpBzG,IAAMpC,EAAOd,S,EAGjBc,EAAO8I,QAAU,SAAkBlK,EAAGwD,GAGpC,GAFIX,EAAW7C,EAAGyB,cAAazB,EAAIoB,EAAOmC,KAAKvD,EAAGA,EAAE2G,OAAQ3G,EAAEkD,aAC1DL,EAAWW,EAAG/B,cAAa+B,EAAIpC,EAAOmC,KAAKC,EAAGA,EAAEmD,OAAQnD,EAAEN,cACzD9B,EAAOsC,SAAS1D,KAAOoB,EAAOsC,SAASF,GAC1C,MAAM,IAAI1B,UACR,yEAIJ,GAAI9B,IAAMwD,EAAG,OAAO,EAEpB,IAAI2G,EAAInK,EAAEuB,OACN6I,EAAI5G,EAAEjC,OAEV,IAAK,IAAIgD,EAAI,EAAGZ,EAAMwE,KAAKC,IAAI+B,EAAGC,GAAI7F,EAAIZ,IAAOY,EAC/C,GAAIvE,EAAEuE,KAAOf,EAAEe,GAAI,CACjB4F,EAAInK,EAAEuE,GACN6F,EAAI5G,EAAEe,GACN,K,CAIJ,OAAI4F,EAAIC,GAAU,EACdA,EAAID,EAAU,EACX,C,EAGT/I,EAAOgB,WAAa,SAAqBD,GACvC,OAAQzB,OAAOyB,GAAU0C,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,E,EAIbzD,EAAOiJ,OAAS,SAAiBC,EAAM/I,GACrC,IAAKlB,MAAM2D,QAAQsG,GACjB,MAAM,IAAIxI,UAAU,+CAGtB,GAAoB,IAAhBwI,EAAK/I,OACP,OAAOH,EAAOwI,MAAM,GAGtB,IAAIrF,EACJ,QAAeV,IAAXtC,EAEF,IADAA,EAAS,EACJgD,EAAI,EAAGA,EAAI+F,EAAK/I,SAAUgD,EAC7BhD,GAAU+I,EAAK/F,GAAGhD,OAItB,MAAMyB,EAAS5B,EAAO2I,YAAYxI,GAClC,IAAIgJ,EAAM,EACV,IAAKhG,EAAI,EAAGA,EAAI+F,EAAK/I,SAAUgD,EAAG,CAChC,IAAIpE,EAAMmK,EAAK/F,GACf,GAAI1B,EAAW1C,EAAKsB,YACd8I,EAAMpK,EAAIoB,OAASyB,EAAOzB,QACvBH,EAAOsC,SAASvD,KAAMA,EAAMiB,EAAOmC,KAAKpD,IAC7CA,EAAI2C,KAAKE,EAAQuH,IAEjB9I,WAAWnB,UAAUkK,IAAIhK,KACvBwC,EACA7C,EACAoK,OAGC,KAAKnJ,EAAOsC,SAASvD,GAC1B,MAAM,IAAI2B,UAAU,+CAEpB3B,EAAI2C,KAAKE,EAAQuH,EAAI,CAEvBA,GAAOpK,EAAIoB,M,CAEb,OAAOyB,C,EAkDT5B,EAAO8B,WAAab,EA8EpBjB,EAAOd,UAAU2J,WAAY,EAQ7B7I,EAAOd,UAAUmK,OAAS,WACxB,MAAM9G,EAAMsB,KAAK1D,OACjB,GAAIoC,EAAM,GAAM,EACd,MAAM,IAAInC,WAAW,6CAEvB,IAAK,IAAI+C,EAAI,EAAGA,EAAIZ,EAAKY,GAAK,EAC5BiB,EAAKP,KAAMV,EAAGA,EAAI,GAEpB,OAAOU,I,EAGT7D,EAAOd,UAAUoK,OAAS,WACxB,MAAM/G,EAAMsB,KAAK1D,OACjB,GAAIoC,EAAM,GAAM,EACd,MAAM,IAAInC,WAAW,6CAEvB,IAAK,IAAI+C,EAAI,EAAGA,EAAIZ,EAAKY,GAAK,EAC5BiB,EAAKP,KAAMV,EAAGA,EAAI,GAClBiB,EAAKP,KAAMV,EAAI,EAAGA,EAAI,GAExB,OAAOU,I,EAGT7D,EAAOd,UAAUqK,OAAS,WACxB,MAAMhH,EAAMsB,KAAK1D,OACjB,GAAIoC,EAAM,GAAM,EACd,MAAM,IAAInC,WAAW,6CAEvB,IAAK,IAAI+C,EAAI,EAAGA,EAAIZ,EAAKY,GAAK,EAC5BiB,EAAKP,KAAMV,EAAGA,EAAI,GAClBiB,EAAKP,KAAMV,EAAI,EAAGA,EAAI,GACtBiB,EAAKP,KAAMV,EAAI,EAAGA,EAAI,GACtBiB,EAAKP,KAAMV,EAAI,EAAGA,EAAI,GAExB,OAAOU,I,EAGT7D,EAAOd,UAAUL,SAAW,WAC1B,MAAMsB,EAAS0D,KAAK1D,OACpB,OAAe,IAAXA,EAAqB,GACA,IAArBkD,UAAUlD,OAAqB4D,EAAUF,KAAM,EAAG1D,GAC/CuD,EAAaiE,MAAM9D,KAAMR,U,EAGlCrD,EAAOd,UAAUsK,eAAiBxJ,EAAOd,UAAUL,SAEnDmB,EAAOd,UAAUuK,OAAS,SAAiBrH,GACzC,IAAKpC,EAAOsC,SAASF,GAAI,MAAM,IAAI1B,UAAU,6BAC7C,OAAImD,OAASzB,GACsB,IAA5BpC,EAAO8I,QAAQjF,KAAMzB,E,EAG9BpC,EAAOd,UAAUwK,QAAU,WACzB,IAAIzD,EAAM,GACV,MAAM0D,EAAM9J,EAGZ,OAFAoG,EAAMpC,KAAKhF,SAAS,MAAO,EAAG8K,GAAKC,QAAO,UAAY,OAAOC,OACzDhG,KAAK1D,OAASwJ,IAAK1D,GAAO,SACvB,WAAaA,EAAM,G,EAExBnG,IACFE,EAAOd,UAAUY,GAAuBE,EAAOd,UAAUwK,SAG3D1J,EAAOd,UAAU4J,QAAU,SAAkBgB,EAAQnG,EAAOC,EAAKmG,EAAWC,GAI1E,GAHIvI,EAAWqI,EAAQzJ,cACrByJ,EAAS9J,EAAOmC,KAAK2H,EAAQA,EAAOvE,OAAQuE,EAAOhI,cAEhD9B,EAAOsC,SAASwH,GACnB,MAAM,IAAIpJ,UACR,wFAC2BoJ,GAiB/B,QAbcrH,IAAVkB,IACFA,EAAQ,QAEElB,IAARmB,IACFA,EAAMkG,EAASA,EAAO3J,OAAS,QAEfsC,IAAdsH,IACFA,EAAY,QAEEtH,IAAZuH,IACFA,EAAUnG,KAAK1D,QAGbwD,EAAQ,GAAKC,EAAMkG,EAAO3J,QAAU4J,EAAY,GAAKC,EAAUnG,KAAK1D,OACtE,MAAM,IAAIC,WAAW,sBAGvB,GAAI2J,GAAaC,GAAWrG,GAASC,EACnC,OAAO,EAET,GAAImG,GAAaC,EACf,OAAO,EAET,GAAIrG,GAASC,EACX,OAAO,EAQT,GAAIC,OAASiG,EAAQ,OAAO,EAE5B,IAAIf,GAJJiB,KAAa,IADbD,KAAe,GAMXf,GAPJpF,KAAS,IADTD,KAAW,GASX,MAAMpB,EAAMwE,KAAKC,IAAI+B,EAAGC,GAElBiB,EAAWpG,KAAKzC,MAAM2I,EAAWC,GACjCE,EAAaJ,EAAO1I,MAAMuC,EAAOC,GAEvC,IAAK,IAAIT,EAAI,EAAGA,EAAIZ,IAAOY,EACzB,GAAI8G,EAAS9G,KAAO+G,EAAW/G,GAAI,CACjC4F,EAAIkB,EAAS9G,GACb6F,EAAIkB,EAAW/G,GACf,K,CAIJ,OAAI4F,EAAIC,GAAU,EACdA,EAAID,EAAU,EACX,C,EA4HT/I,EAAOd,UAAUiL,SAAW,SAAmB3F,EAAK3C,EAAYd,GAC9D,OAAmD,IAA5C8C,KAAKc,QAAQH,EAAK3C,EAAYd,E,EAGvCf,EAAOd,UAAUyF,QAAU,SAAkBH,EAAK3C,EAAYd,GAC5D,OAAOwD,EAAqBV,KAAMW,EAAK3C,EAAYd,GAAU,E,EAG/Df,EAAOd,UAAU0F,YAAc,SAAsBJ,EAAK3C,EAAYd,GACpE,OAAOwD,EAAqBV,KAAMW,EAAK3C,EAAYd,GAAU,E,EA6C/Df,EAAOd,UAAUiC,MAAQ,SAAgBL,EAAQyE,EAAQpF,EAAQY,GAE/D,QAAe0B,IAAX8C,EACFxE,EAAW,OACXZ,EAAS0D,KAAK1D,OACdoF,EAAS,OAEJ,QAAe9C,IAAXtC,GAA0C,iBAAXoF,EACxCxE,EAAWwE,EACXpF,EAAS0D,KAAK1D,OACdoF,EAAS,MAEJ,KAAI6E,SAAS7E,GAUlB,MAAM,IAAI9F,MACR,2EAVF8F,KAAoB,EAChB6E,SAASjK,IACXA,KAAoB,OACHsC,IAAb1B,IAAwBA,EAAW,UAEvCA,EAAWZ,EACXA,OAASsC,EAKV,CAGH,MAAMgD,EAAY5B,KAAK1D,OAASoF,EAGhC,SAFe9C,IAAXtC,GAAwBA,EAASsF,KAAWtF,EAASsF,GAErD3E,EAAQX,OAAS,IAAMA,EAAS,GAAKoF,EAAS,IAAOA,EAAS1B,KAAK1D,OACrE,MAAM,IAAIC,WAAW,0CAGlBW,IAAUA,EAAW,QAE1B,IAAIuC,GAAc,EAClB,OACE,OAAQvC,GACN,IAAK,MACH,OAAOuE,EAASzB,KAAM/C,EAAQyE,EAAQpF,GAExC,IAAK,OACL,IAAK,QACH,OAAO2F,EAAUjC,KAAM/C,EAAQyE,EAAQpF,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO6F,EAAWnC,KAAM/C,EAAQyE,EAAQpF,GAE1C,IAAK,SAEH,OAAOmG,EAAYzC,KAAM/C,EAAQyE,EAAQpF,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOoG,EAAU1C,KAAM/C,EAAQyE,EAAQpF,GAEzC,QACE,GAAImD,EAAa,MAAM,IAAI5C,UAAU,qBAAuBK,GAC5DA,GAAY,GAAKA,GAAU0C,cAC3BH,GAAc,E,EAKtBtD,EAAOd,UAAUmL,OAAS,WACxB,MAAO,CACL1H,KAAM,SACNE,KAAM5D,MAAMC,UAAUkC,MAAMhC,KAAKyE,KAAKyG,MAAQzG,KAAM,G,EA2FxD,MAAM6D,EAAuB,KAoB7B,SAAS1D,EAAYjF,EAAK4E,EAAOC,GAC/B,IAAI2G,EAAM,GACV3G,EAAMmD,KAAKC,IAAIjI,EAAIoB,OAAQyD,GAE3B,IAAK,IAAIT,EAAIQ,EAAOR,EAAIS,IAAOT,EAC7BoH,GAAOjL,OAAOC,aAAsB,IAATR,EAAIoE,IAEjC,OAAOoH,C,CAGT,SAAStG,EAAalF,EAAK4E,EAAOC,GAChC,IAAI2G,EAAM,GACV3G,EAAMmD,KAAKC,IAAIjI,EAAIoB,OAAQyD,GAE3B,IAAK,IAAIT,EAAIQ,EAAOR,EAAIS,IAAOT,EAC7BoH,GAAOjL,OAAOC,aAAaR,EAAIoE,IAEjC,OAAOoH,C,CAGT,SAASzG,EAAU/E,EAAK4E,EAAOC,GAC7B,MAAMrB,EAAMxD,EAAIoB,SAEXwD,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMrB,KAAKqB,EAAMrB,GAExC,IAAIiI,EAAM,GACV,IAAK,IAAIrH,EAAIQ,EAAOR,EAAIS,IAAOT,EAC7BqH,GAAOC,GAAoB1L,EAAIoE,IAEjC,OAAOqH,C,CAGT,SAASrG,EAAcpF,EAAK4E,EAAOC,GACjC,MAAM8G,EAAQ3L,EAAIqC,MAAMuC,EAAOC,GAC/B,IAAIqD,EAAM,GAEV,IAAK,IAAI9D,EAAI,EAAGA,EAAIuH,EAAMvK,OAAS,EAAGgD,GAAK,EACzC8D,GAAO3H,OAAOC,aAAamL,EAAMvH,GAAqB,IAAfuH,EAAMvH,EAAI,IAEnD,OAAO8D,C,CAkCT,SAAS0D,EAAapF,EAAQqF,EAAKzK,GACjC,GAAIoF,EAAU,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAInF,WAAW,sBAC3D,GAAImF,EAASqF,EAAMzK,EAAQ,MAAM,IAAIC,WAAW,wC,CA0QlD,SAASyK,EAAU9L,EAAK8B,EAAO0E,EAAQqF,EAAKjB,EAAK3C,GAC/C,IAAKhH,EAAOsC,SAASvD,GAAM,MAAM,IAAI2B,UAAU,+CAC/C,GAAIG,EAAQ8I,GAAO9I,EAAQmG,EAAK,MAAM,IAAI5G,WAAW,qCACrD,GAAImF,EAASqF,EAAM7L,EAAIoB,OAAQ,MAAM,IAAIC,WAAW,qB,CAgGtD,SAAS0K,EAAgB/L,EAAK8B,EAAO0E,EAAQyB,EAAK2C,GAChDoB,EAAWlK,EAAOmG,EAAK2C,EAAK5K,EAAKwG,EAAQ,GAEzC,IAAIoB,EAAKnB,OAAO3E,EAAQmK,OAAO,aAC/BjM,EAAIwG,KAAYoB,EAChBA,IAAW,EACX5H,EAAIwG,KAAYoB,EAChBA,IAAW,EACX5H,EAAIwG,KAAYoB,EAChBA,IAAW,EACX5H,EAAIwG,KAAYoB,EAChB,IAAID,EAAKlB,OAAO3E,GAASmK,OAAO,IAAMA,OAAO,aAQ7C,OAPAjM,EAAIwG,KAAYmB,EAChBA,IAAW,EACX3H,EAAIwG,KAAYmB,EAChBA,IAAW,EACX3H,EAAIwG,KAAYmB,EAChBA,IAAW,EACX3H,EAAIwG,KAAYmB,EACTnB,C,CAGT,SAAS0F,EAAgBlM,EAAK8B,EAAO0E,EAAQyB,EAAK2C,GAChDoB,EAAWlK,EAAOmG,EAAK2C,EAAK5K,EAAKwG,EAAQ,GAEzC,IAAIoB,EAAKnB,OAAO3E,EAAQmK,OAAO,aAC/BjM,EAAIwG,EAAS,GAAKoB,EAClBA,IAAW,EACX5H,EAAIwG,EAAS,GAAKoB,EAClBA,IAAW,EACX5H,EAAIwG,EAAS,GAAKoB,EAClBA,IAAW,EACX5H,EAAIwG,EAAS,GAAKoB,EAClB,IAAID,EAAKlB,OAAO3E,GAASmK,OAAO,IAAMA,OAAO,aAQ7C,OAPAjM,EAAIwG,EAAS,GAAKmB,EAClBA,IAAW,EACX3H,EAAIwG,EAAS,GAAKmB,EAClBA,IAAW,EACX3H,EAAIwG,EAAS,GAAKmB,EAClBA,IAAW,EACX3H,EAAIwG,GAAUmB,EACPnB,EAAS,C,CAmHlB,SAAS2F,EAAcnM,EAAK8B,EAAO0E,EAAQqF,EAAKjB,EAAK3C,GACnD,GAAIzB,EAASqF,EAAM7L,EAAIoB,OAAQ,MAAM,IAAIC,WAAW,sBACpD,GAAImF,EAAS,EAAG,MAAM,IAAInF,WAAW,qB,CAGvC,SAAS+K,EAAYpM,EAAK8B,EAAO0E,EAAQ6F,EAAcC,GAOrD,OANAxK,GAASA,EACT0E,KAAoB,EACf8F,GACHH,EAAanM,EAAK8B,EAAO0E,EAAQ,GAEnC+F,EAAAnK,MAAcpC,EAAK8B,EAAO0E,EAAQ6F,EAAc,GAAI,GAC7C7F,EAAS,C,CAWlB,SAASgG,EAAaxM,EAAK8B,EAAO0E,EAAQ6F,EAAcC,GAOtD,OANAxK,GAASA,EACT0E,KAAoB,EACf8F,GACHH,EAAanM,EAAK8B,EAAO0E,EAAQ,GAEnC+F,EAAAnK,MAAcpC,EAAK8B,EAAO0E,EAAQ6F,EAAc,GAAI,GAC7C7F,EAAS,C,CAxkBlBvF,EAAOd,UAAUkC,MAAQ,SAAgBuC,EAAOC,GAC9C,MAAMrB,EAAMsB,KAAK1D,QACjBwD,IAAUA,GAGE,GACVA,GAASpB,GACG,IAAGoB,EAAQ,GACdA,EAAQpB,IACjBoB,EAAQpB,IANVqB,OAAcnB,IAARmB,EAAoBrB,IAAQqB,GASxB,GACRA,GAAOrB,GACG,IAAGqB,EAAM,GACVA,EAAMrB,IACfqB,EAAMrB,GAGJqB,EAAMD,IAAOC,EAAMD,GAEvB,MAAM6H,EAAS3H,KAAK4H,SAAS9H,EAAOC,GAIpC,OAFAtD,OAAOC,eAAeiL,EAAQxL,EAAOd,WAE9BsM,C,EAWTxL,EAAOd,UAAUwM,WACjB1L,EAAOd,UAAUyM,WAAa,SAAqBpG,EAAQzD,EAAYuJ,GACrE9F,KAAoB,EACpBzD,KAA4B,EACvBuJ,GAAUV,EAAYpF,EAAQzD,EAAY+B,KAAK1D,QAEpD,IAAIqE,EAAMX,KAAK0B,GACXqG,EAAM,EACNzI,EAAI,EACR,OAASA,EAAIrB,IAAe8J,GAAO,MACjCpH,GAAOX,KAAK0B,EAASpC,GAAKyI,EAG5B,OAAOpH,C,EAGTxE,EAAOd,UAAU2M,WACjB7L,EAAOd,UAAU4M,WAAa,SAAqBvG,EAAQzD,EAAYuJ,GACrE9F,KAAoB,EACpBzD,KAA4B,EACvBuJ,GACHV,EAAYpF,EAAQzD,EAAY+B,KAAK1D,QAGvC,IAAIqE,EAAMX,KAAK0B,IAAWzD,GACtB8J,EAAM,EACV,KAAO9J,EAAa,IAAM8J,GAAO,MAC/BpH,GAAOX,KAAK0B,IAAWzD,GAAc8J,EAGvC,OAAOpH,C,EAGTxE,EAAOd,UAAU6M,UACjB/L,EAAOd,UAAU8M,UAAY,SAAoBzG,EAAQ8F,GAGvD,OAFA9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QACpC0D,KAAK0B,E,EAGdvF,EAAOd,UAAU+M,aACjBjM,EAAOd,UAAUgN,aAAe,SAAuB3G,EAAQ8F,GAG7D,OAFA9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QACpC0D,KAAK0B,GAAW1B,KAAK0B,EAAS,IAAM,C,EAG7CvF,EAAOd,UAAUiN,aACjBnM,EAAOd,UAAUgG,aAAe,SAAuBK,EAAQ8F,GAG7D,OAFA9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QACpC0D,KAAM0B,IAAW,EAAK1B,KAAK0B,EAAS,E,EAG7CvF,EAAOd,UAAUkN,aACjBpM,EAAOd,UAAUmN,aAAe,SAAuB9G,EAAQ8F,GAI7D,OAHA9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,SAEnC0D,KAAM0B,GACT1B,KAAK0B,EAAS,IAAM,EACpB1B,KAAK0B,EAAS,IAAM,IACD,SAAnB1B,KAAK0B,EAAS,E,EAGrBvF,EAAOd,UAAUoN,aACjBtM,EAAOd,UAAUqN,aAAe,SAAuBhH,EAAQ8F,GAI7D,OAHA9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QAEpB,SAAhB0D,KAAM0B,IACV1B,KAAM0B,EAAS,IAAM,GACrB1B,KAAK0B,EAAS,IAAM,EACrB1B,KAAK0B,EAAS,G,EAGlBvF,EAAOd,UAAUsN,gBAAkBC,IAAmB,SAA0BlH,GAE9EmH,EADAnH,KAAoB,EACG,UACvB,MAAMoH,EAAQ9I,KAAK0B,GACbqH,EAAO/I,KAAK0B,EAAS,QACb9C,IAAVkK,QAAgClK,IAATmK,GACzBC,EAAYtH,EAAQ1B,KAAK1D,OAAS,GAGpC,MAAMwG,EAAKgG,EACQ,IAAjB9I,OAAO0B,GACU,MAAjB1B,OAAO0B,GACP1B,OAAO0B,GAAU,GAAK,GAElBmB,EAAK7C,OAAO0B,GACC,IAAjB1B,OAAO0B,GACU,MAAjB1B,OAAO0B,GACPqH,EAAO,GAAK,GAEd,OAAO5B,OAAOrE,IAAOqE,OAAOtE,IAAOsE,OAAO,I,IAG5ChL,EAAOd,UAAU4N,gBAAkBL,IAAmB,SAA0BlH,GAE9EmH,EADAnH,KAAoB,EACG,UACvB,MAAMoH,EAAQ9I,KAAK0B,GACbqH,EAAO/I,KAAK0B,EAAS,QACb9C,IAAVkK,QAAgClK,IAATmK,GACzBC,EAAYtH,EAAQ1B,KAAK1D,OAAS,GAGpC,MAAMuG,EAAKiG,EAAQ,GAAK,GACL,MAAjB9I,OAAO0B,GACU,IAAjB1B,OAAO0B,GACP1B,OAAO0B,GAEHoB,EAAK9C,OAAO0B,GAAU,GAAK,GACd,MAAjB1B,OAAO0B,GACU,IAAjB1B,OAAO0B,GACPqH,EAEF,OAAQ5B,OAAOtE,IAAOsE,OAAO,KAAOA,OAAOrE,E,IAG7C3G,EAAOd,UAAU6N,UAAY,SAAoBxH,EAAQzD,EAAYuJ,GACnE9F,KAAoB,EACpBzD,KAA4B,EACvBuJ,GAAUV,EAAYpF,EAAQzD,EAAY+B,KAAK1D,QAEpD,IAAIqE,EAAMX,KAAK0B,GACXqG,EAAM,EACNzI,EAAI,EACR,OAASA,EAAIrB,IAAe8J,GAAO,MACjCpH,GAAOX,KAAK0B,EAASpC,GAAKyI,EAM5B,OAJAA,GAAO,IAEHpH,GAAOoH,IAAKpH,GAAOuC,KAAKiG,IAAI,EAAG,EAAIlL,IAEhC0C,C,EAGTxE,EAAOd,UAAU+N,UAAY,SAAoB1H,EAAQzD,EAAYuJ,GACnE9F,KAAoB,EACpBzD,KAA4B,EACvBuJ,GAAUV,EAAYpF,EAAQzD,EAAY+B,KAAK1D,QAEpD,IAAIgD,EAAIrB,EACJ8J,EAAM,EACNpH,EAAMX,KAAK0B,IAAWpC,GAC1B,KAAOA,EAAI,IAAMyI,GAAO,MACtBpH,GAAOX,KAAK0B,IAAWpC,GAAKyI,EAM9B,OAJAA,GAAO,IAEHpH,GAAOoH,IAAKpH,GAAOuC,KAAKiG,IAAI,EAAG,EAAIlL,IAEhC0C,C,EAGTxE,EAAOd,UAAUgO,SAAW,SAAmB3H,EAAQ8F,GAGrD,OAFA9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QACtB,IAAf0D,KAAK0B,IACyB,GAA3B,IAAO1B,KAAK0B,GAAU,GADK1B,KAAK0B,E,EAI3CvF,EAAOd,UAAUiO,YAAc,SAAsB5H,EAAQ8F,GAC3D9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QAC3C,MAAMqE,EAAMX,KAAK0B,GAAW1B,KAAK0B,EAAS,IAAM,EAChD,OAAc,MAAPf,EAAuB,WAANA,EAAmBA,C,EAG7CxE,EAAOd,UAAUkO,YAAc,SAAsB7H,EAAQ8F,GAC3D9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QAC3C,MAAMqE,EAAMX,KAAK0B,EAAS,GAAM1B,KAAK0B,IAAW,EAChD,OAAc,MAAPf,EAAuB,WAANA,EAAmBA,C,EAG7CxE,EAAOd,UAAUmO,YAAc,SAAsB9H,EAAQ8F,GAI3D,OAHA9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QAEpC0D,KAAM0B,GACV1B,KAAK0B,EAAS,IAAM,EACpB1B,KAAK0B,EAAS,IAAM,GACpB1B,KAAK0B,EAAS,IAAM,E,EAGzBvF,EAAOd,UAAUoO,YAAc,SAAsB/H,EAAQ8F,GAI3D,OAHA9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QAEpC0D,KAAM0B,IAAW,GACrB1B,KAAK0B,EAAS,IAAM,GACpB1B,KAAK0B,EAAS,IAAM,EACpB1B,KAAK0B,EAAS,E,EAGnBvF,EAAOd,UAAUqO,eAAiBd,IAAmB,SAAyBlH,GAE5EmH,EADAnH,KAAoB,EACG,UACvB,MAAMoH,EAAQ9I,KAAK0B,GACbqH,EAAO/I,KAAK0B,EAAS,QACb9C,IAAVkK,QAAgClK,IAATmK,GACzBC,EAAYtH,EAAQ1B,KAAK1D,OAAS,GAGpC,MAAMqE,EAAMX,KAAK0B,EAAS,GACL,IAAnB1B,KAAK0B,EAAS,GACK,MAAnB1B,KAAK0B,EAAS,IACbqH,GAAQ,IAEX,OAAQ5B,OAAOxG,IAAQwG,OAAO,KAC5BA,OAAO2B,EACU,IAAjB9I,OAAO0B,GACU,MAAjB1B,OAAO0B,GACP1B,OAAO0B,GAAU,GAAK,G,IAG1BvF,EAAOd,UAAUsO,eAAiBf,IAAmB,SAAyBlH,GAE5EmH,EADAnH,KAAoB,EACG,UACvB,MAAMoH,EAAQ9I,KAAK0B,GACbqH,EAAO/I,KAAK0B,EAAS,QACb9C,IAAVkK,QAAgClK,IAATmK,GACzBC,EAAYtH,EAAQ1B,KAAK1D,OAAS,GAGpC,MAAMqE,GAAOmI,GAAS,IACH,MAAjB9I,OAAO0B,GACU,IAAjB1B,OAAO0B,GACP1B,OAAO0B,GAET,OAAQyF,OAAOxG,IAAQwG,OAAO,KAC5BA,OAAOnH,OAAO0B,GAAU,GAAK,GACZ,MAAjB1B,OAAO0B,GACU,IAAjB1B,OAAO0B,GACPqH,E,IAGJ5M,EAAOd,UAAUuO,YAAc,SAAsBlI,EAAQ8F,GAG3D,OAFA9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QACpCmL,EAAArG,KAAapB,KAAM0B,GAAQ,EAAM,GAAI,E,EAG9CvF,EAAOd,UAAUwO,YAAc,SAAsBnI,EAAQ8F,GAG3D,OAFA9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QACpCmL,EAAArG,KAAapB,KAAM0B,GAAQ,EAAO,GAAI,E,EAG/CvF,EAAOd,UAAUyO,aAAe,SAAuBpI,EAAQ8F,GAG7D,OAFA9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QACpCmL,EAAArG,KAAapB,KAAM0B,GAAQ,EAAM,GAAI,E,EAG9CvF,EAAOd,UAAU0O,aAAe,SAAuBrI,EAAQ8F,GAG7D,OAFA9F,KAAoB,EACf8F,GAAUV,EAAYpF,EAAQ,EAAG1B,KAAK1D,QACpCmL,EAAArG,KAAapB,KAAM0B,GAAQ,EAAO,GAAI,E,EAS/CvF,EAAOd,UAAU2O,YACjB7N,EAAOd,UAAU4O,YAAc,SAAsBjN,EAAO0E,EAAQzD,EAAYuJ,GAI9E,GAHAxK,GAASA,EACT0E,KAAoB,EACpBzD,KAA4B,GACvBuJ,EAAU,CAEbR,EAAShH,KAAMhD,EAAO0E,EAAQzD,EADbiF,KAAKiG,IAAI,EAAG,EAAIlL,GAAc,EACK,E,CAGtD,IAAI8J,EAAM,EACNzI,EAAI,EAER,IADAU,KAAK0B,GAAkB,IAAR1E,IACNsC,EAAIrB,IAAe8J,GAAO,MACjC/H,KAAK0B,EAASpC,GAAKtC,EAAS+K,EAAO,IAGrC,OAAOrG,EAASzD,C,EAGlB9B,EAAOd,UAAU6O,YACjB/N,EAAOd,UAAU8O,YAAc,SAAsBnN,EAAO0E,EAAQzD,EAAYuJ,GAI9E,GAHAxK,GAASA,EACT0E,KAAoB,EACpBzD,KAA4B,GACvBuJ,EAAU,CAEbR,EAAShH,KAAMhD,EAAO0E,EAAQzD,EADbiF,KAAKiG,IAAI,EAAG,EAAIlL,GAAc,EACK,E,CAGtD,IAAIqB,EAAIrB,EAAa,EACjB8J,EAAM,EAEV,IADA/H,KAAK0B,EAASpC,GAAa,IAARtC,IACVsC,GAAK,IAAMyI,GAAO,MACzB/H,KAAK0B,EAASpC,GAAKtC,EAAS+K,EAAO,IAGrC,OAAOrG,EAASzD,C,EAGlB9B,EAAOd,UAAU+O,WACjBjO,EAAOd,UAAUgP,WAAa,SAAqBrN,EAAO0E,EAAQ8F,GAKhE,OAJAxK,GAASA,EACT0E,KAAoB,EACf8F,GAAUR,EAAShH,KAAMhD,EAAO0E,EAAQ,EAAG,IAAM,GACtD1B,KAAK0B,GAAmB,IAAR1E,EACT0E,EAAS,C,EAGlBvF,EAAOd,UAAUiP,cACjBnO,EAAOd,UAAUkP,cAAgB,SAAwBvN,EAAO0E,EAAQ8F,GAMtE,OALAxK,GAASA,EACT0E,KAAoB,EACf8F,GAAUR,EAAShH,KAAMhD,EAAO0E,EAAQ,EAAG,MAAQ,GACxD1B,KAAK0B,GAAmB,IAAR1E,EAChBgD,KAAK0B,EAAS,GAAM1E,IAAU,EACvB0E,EAAS,C,EAGlBvF,EAAOd,UAAUmP,cACjBrO,EAAOd,UAAUoP,cAAgB,SAAwBzN,EAAO0E,EAAQ8F,GAMtE,OALAxK,GAASA,EACT0E,KAAoB,EACf8F,GAAUR,EAAShH,KAAMhD,EAAO0E,EAAQ,EAAG,MAAQ,GACxD1B,KAAK0B,GAAW1E,IAAU,EAC1BgD,KAAK0B,EAAS,GAAc,IAAR1E,EACb0E,EAAS,C,EAGlBvF,EAAOd,UAAUqP,cACjBvO,EAAOd,UAAUsP,cAAgB,SAAwB3N,EAAO0E,EAAQ8F,GAQtE,OAPAxK,GAASA,EACT0E,KAAoB,EACf8F,GAAUR,EAAShH,KAAMhD,EAAO0E,EAAQ,EAAG,WAAY,GAC5D1B,KAAK0B,EAAS,GAAM1E,IAAU,GAC9BgD,KAAK0B,EAAS,GAAM1E,IAAU,GAC9BgD,KAAK0B,EAAS,GAAM1E,IAAU,EAC9BgD,KAAK0B,GAAmB,IAAR1E,EACT0E,EAAS,C,EAGlBvF,EAAOd,UAAUuP,cACjBzO,EAAOd,UAAUwP,cAAgB,SAAwB7N,EAAO0E,EAAQ8F,GAQtE,OAPAxK,GAASA,EACT0E,KAAoB,EACf8F,GAAUR,EAAShH,KAAMhD,EAAO0E,EAAQ,EAAG,WAAY,GAC5D1B,KAAK0B,GAAW1E,IAAU,GAC1BgD,KAAK0B,EAAS,GAAM1E,IAAU,GAC9BgD,KAAK0B,EAAS,GAAM1E,IAAU,EAC9BgD,KAAK0B,EAAS,GAAc,IAAR1E,EACb0E,EAAS,C,EA+ClBvF,EAAOd,UAAUyP,iBAAmBlC,IAAmB,SAA2B5L,EAAO0E,EAAS,GAChG,OAAOuF,EAAejH,KAAMhD,EAAO0E,EAAQyF,OAAO,GAAIA,OAAO,sB,IAG/DhL,EAAOd,UAAU0P,iBAAmBnC,IAAmB,SAA2B5L,EAAO0E,EAAS,GAChG,OAAO0F,EAAepH,KAAMhD,EAAO0E,EAAQyF,OAAO,GAAIA,OAAO,sB,IAG/DhL,EAAOd,UAAU2P,WAAa,SAAqBhO,EAAO0E,EAAQzD,EAAYuJ,GAG5E,GAFAxK,GAASA,EACT0E,KAAoB,GACf8F,EAAU,CACb,MAAMyD,EAAQ/H,KAAKiG,IAAI,EAAG,EAAKlL,EAAc,GAE7C+I,EAAShH,KAAMhD,EAAO0E,EAAQzD,EAAYgN,EAAQ,GAAIA,E,CAGxD,IAAI3L,EAAI,EACJyI,EAAM,EACNmD,EAAM,EAEV,IADAlL,KAAK0B,GAAkB,IAAR1E,IACNsC,EAAIrB,IAAe8J,GAAO,MAC7B/K,EAAQ,GAAa,IAARkO,GAAsC,IAAzBlL,KAAK0B,EAASpC,EAAI,KAC9C4L,EAAM,GAERlL,KAAK0B,EAASpC,IAAMtC,EAAS+K,GAAQ,GAAKmD,EAAM,IAGlD,OAAOxJ,EAASzD,C,EAGlB9B,EAAOd,UAAU8P,WAAa,SAAqBnO,EAAO0E,EAAQzD,EAAYuJ,GAG5E,GAFAxK,GAASA,EACT0E,KAAoB,GACf8F,EAAU,CACb,MAAMyD,EAAQ/H,KAAKiG,IAAI,EAAG,EAAKlL,EAAc,GAE7C+I,EAAShH,KAAMhD,EAAO0E,EAAQzD,EAAYgN,EAAQ,GAAIA,E,CAGxD,IAAI3L,EAAIrB,EAAa,EACjB8J,EAAM,EACNmD,EAAM,EAEV,IADAlL,KAAK0B,EAASpC,GAAa,IAARtC,IACVsC,GAAK,IAAMyI,GAAO,MACrB/K,EAAQ,GAAa,IAARkO,GAAsC,IAAzBlL,KAAK0B,EAASpC,EAAI,KAC9C4L,EAAM,GAERlL,KAAK0B,EAASpC,IAAMtC,EAAS+K,GAAQ,GAAKmD,EAAM,IAGlD,OAAOxJ,EAASzD,C,EAGlB9B,EAAOd,UAAU+P,UAAY,SAAoBpO,EAAO0E,EAAQ8F,GAM9D,OALAxK,GAASA,EACT0E,KAAoB,EACf8F,GAAUR,EAAShH,KAAMhD,EAAO0E,EAAQ,EAAG,KAAM,KAClD1E,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCgD,KAAK0B,GAAmB,IAAR1E,EACT0E,EAAS,C,EAGlBvF,EAAOd,UAAUgQ,aAAe,SAAuBrO,EAAO0E,EAAQ8F,GAMpE,OALAxK,GAASA,EACT0E,KAAoB,EACf8F,GAAUR,EAAShH,KAAMhD,EAAO0E,EAAQ,EAAG,OAAQ,OACxD1B,KAAK0B,GAAmB,IAAR1E,EAChBgD,KAAK0B,EAAS,GAAM1E,IAAU,EACvB0E,EAAS,C,EAGlBvF,EAAOd,UAAUiQ,aAAe,SAAuBtO,EAAO0E,EAAQ8F,GAMpE,OALAxK,GAASA,EACT0E,KAAoB,EACf8F,GAAUR,EAAShH,KAAMhD,EAAO0E,EAAQ,EAAG,OAAQ,OACxD1B,KAAK0B,GAAW1E,IAAU,EAC1BgD,KAAK0B,EAAS,GAAc,IAAR1E,EACb0E,EAAS,C,EAGlBvF,EAAOd,UAAUkQ,aAAe,SAAuBvO,EAAO0E,EAAQ8F,GAQpE,OAPAxK,GAASA,EACT0E,KAAoB,EACf8F,GAAUR,EAAShH,KAAMhD,EAAO0E,EAAQ,EAAG,YAAY,YAC5D1B,KAAK0B,GAAmB,IAAR1E,EAChBgD,KAAK0B,EAAS,GAAM1E,IAAU,EAC9BgD,KAAK0B,EAAS,GAAM1E,IAAU,GAC9BgD,KAAK0B,EAAS,GAAM1E,IAAU,GACvB0E,EAAS,C,EAGlBvF,EAAOd,UAAUmQ,aAAe,SAAuBxO,EAAO0E,EAAQ8F,GASpE,OARAxK,GAASA,EACT0E,KAAoB,EACf8F,GAAUR,EAAShH,KAAMhD,EAAO0E,EAAQ,EAAG,YAAY,YACxD1E,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5CgD,KAAK0B,GAAW1E,IAAU,GAC1BgD,KAAK0B,EAAS,GAAM1E,IAAU,GAC9BgD,KAAK0B,EAAS,GAAM1E,IAAU,EAC9BgD,KAAK0B,EAAS,GAAc,IAAR1E,EACb0E,EAAS,C,EAGlBvF,EAAOd,UAAUoQ,gBAAkB7C,IAAmB,SAA0B5L,EAAO0E,EAAS,GAC9F,OAAOuF,EAAejH,KAAMhD,EAAO0E,GAASyF,OAAO,sBAAuBA,OAAO,sB,IAGnFhL,EAAOd,UAAUqQ,gBAAkB9C,IAAmB,SAA0B5L,EAAO0E,EAAS,GAC9F,OAAO0F,EAAepH,KAAMhD,EAAO0E,GAASyF,OAAO,sBAAuBA,OAAO,sB,IAkBnFhL,EAAOd,UAAUsQ,aAAe,SAAuB3O,EAAO0E,EAAQ8F,GACpE,OAAOF,EAAWtH,KAAMhD,EAAO0E,GAAQ,EAAM8F,E,EAG/CrL,EAAOd,UAAUuQ,aAAe,SAAuB5O,EAAO0E,EAAQ8F,GACpE,OAAOF,EAAWtH,KAAMhD,EAAO0E,GAAQ,EAAO8F,E,EAahDrL,EAAOd,UAAUwQ,cAAgB,SAAwB7O,EAAO0E,EAAQ8F,GACtE,OAAOE,EAAY1H,KAAMhD,EAAO0E,GAAQ,EAAM8F,E,EAGhDrL,EAAOd,UAAUyQ,cAAgB,SAAwB9O,EAAO0E,EAAQ8F,GACtE,OAAOE,EAAY1H,KAAMhD,EAAO0E,GAAQ,EAAO8F,E,EAIjDrL,EAAOd,UAAUwC,KAAO,SAAeoI,EAAQ8F,EAAajM,EAAOC,GACjE,IAAK5D,EAAOsC,SAASwH,GAAS,MAAM,IAAIpJ,UAAU,+BAQlD,GAPKiD,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMC,KAAK1D,QAC9ByP,GAAe9F,EAAO3J,SAAQyP,EAAc9F,EAAO3J,QAClDyP,IAAaA,EAAc,GAC5BhM,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlBmG,EAAO3J,QAAgC,IAAhB0D,KAAK1D,OAAc,OAAO,EAGrD,GAAIyP,EAAc,EAChB,MAAM,IAAIxP,WAAW,6BAEvB,GAAIuD,EAAQ,GAAKA,GAASE,KAAK1D,OAAQ,MAAM,IAAIC,WAAW,sBAC5D,GAAIwD,EAAM,EAAG,MAAM,IAAIxD,WAAW,2BAG9BwD,EAAMC,KAAK1D,SAAQyD,EAAMC,KAAK1D,QAC9B2J,EAAO3J,OAASyP,EAAchM,EAAMD,IACtCC,EAAMkG,EAAO3J,OAASyP,EAAcjM,GAGtC,MAAMpB,EAAMqB,EAAMD,EAalB,OAXIE,OAASiG,GAAqD,mBAApCzJ,WAAWnB,UAAU2Q,WAEjDhM,KAAKgM,WAAWD,EAAajM,EAAOC,GAEpCvD,WAAWnB,UAAUkK,IAAIhK,KACvB0K,EACAjG,KAAK4H,SAAS9H,EAAOC,GACrBgM,GAIGrN,C,EAOTvC,EAAOd,UAAUuJ,KAAO,SAAejE,EAAKb,EAAOC,EAAK7C,GAEtD,GAAmB,iBAARyD,EAAkB,CAS3B,GARqB,iBAAVb,GACT5C,EAAW4C,EACXA,EAAQ,EACRC,EAAMC,KAAK1D,QACa,iBAARyD,IAChB7C,EAAW6C,EACXA,EAAMC,KAAK1D,aAEIsC,IAAb1B,GAA8C,iBAAbA,EACnC,MAAM,IAAIL,UAAU,6BAEtB,GAAwB,iBAAbK,IAA0Bf,EAAOgB,WAAWD,GACrD,MAAM,IAAIL,UAAU,qBAAuBK,GAE7C,GAAmB,IAAfyD,EAAIrE,OAAc,CACpB,MAAM2P,EAAOtL,EAAI4B,WAAW,IACV,SAAdrF,GAAwB+O,EAAO,KAClB,WAAb/O,KAEFyD,EAAMsL,E,MAGc,iBAARtL,EAChBA,GAAY,IACY,kBAARA,IAChBA,EAAMgB,OAAOhB,IAIf,GAAIb,EAAQ,GAAKE,KAAK1D,OAASwD,GAASE,KAAK1D,OAASyD,EACpD,MAAM,IAAIxD,WAAW,sBAGvB,GAAIwD,GAAOD,EACT,OAAOE,KAQT,IAAIV,EACJ,GANAQ,KAAkB,EAClBC,OAAcnB,IAARmB,EAAoBC,KAAK1D,OAASyD,IAAQ,EAE3CY,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKrB,EAAIQ,EAAOR,EAAIS,IAAOT,EACzBU,KAAKV,GAAKqB,MAEP,CACL,MAAMkG,EAAQ1K,EAAOsC,SAASkC,GAC1BA,EACAxE,EAAOmC,KAAKqC,EAAKzD,GACfwB,EAAMmI,EAAMvK,OAClB,GAAY,IAARoC,EACF,MAAM,IAAI7B,UAAU,cAAgB8D,EAClC,qCAEJ,IAAKrB,EAAI,EAAGA,EAAIS,EAAMD,IAASR,EAC7BU,KAAKV,EAAIQ,GAAS+G,EAAMvH,EAAIZ,E,CAIhC,OAAOsB,I,EAOT,MAAMkM,EAAS,GACf,SAASC,EAAGC,EAAKC,EAAYC,GAC3BJ,EAAOE,GAAO,cAAwBE,EACpCC,cACEC,QAEA/P,OAAO8H,eAAevE,KAAM,UAAW,CACrChD,MAAOqP,EAAWvI,MAAM9D,KAAMR,WAC9BiN,UAAU,EACVC,cAAc,IAIhB1M,KAAK2M,KAAO,GAAG3M,KAAK2M,SAASP,KAG7BpM,KAAK4M,aAEE5M,KAAK2M,I,CAGVV,WACF,OAAOG,C,CAGLH,SAAMjP,GACRP,OAAO8H,eAAevE,KAAM,OAAQ,CAClC0M,cAAc,EACdlI,YAAY,E,MACZxH,EACAyP,UAAU,G,CAIdzR,WACE,MAAO,GAAGgF,KAAK2M,SAASP,OAASpM,KAAK6M,S,GAkC5C,SAASC,EAAuBnM,GAC9B,IAAIyC,EAAM,GACN9D,EAAIqB,EAAIrE,OACZ,MAAMwD,EAAmB,MAAXa,EAAI,GAAa,EAAI,EACnC,KAAOrB,GAAKQ,EAAQ,EAAGR,GAAK,EAC1B8D,EAAM,IAAIzC,EAAIpD,MAAM+B,EAAI,EAAGA,KAAK8D,IAElC,MAAO,GAAGzC,EAAIpD,MAAM,EAAG+B,KAAK8D,G,CAa9B,SAAS8D,EAAYlK,EAAOmG,EAAK2C,EAAK5K,EAAKwG,EAAQzD,GACjD,GAAIjB,EAAQ8I,GAAO9I,EAAQmG,EAAK,CAC9B,MAAM3C,EAAmB,iBAAR2C,EAAmB,IAAM,GAC1C,IAAI4J,EAWJ,MARIA,EAFA9O,EAAa,EACH,IAARkF,GAAaA,IAAQgE,OAAO,GACtB,OAAO3G,YAAYA,QAA2B,GAAlBvC,EAAa,KAASuC,IAElD,SAASA,QAA2B,GAAlBvC,EAAa,GAAS,IAAIuC,iBACtB,GAAlBvC,EAAa,GAAS,IAAIuC,IAGhC,MAAM2C,IAAM3C,YAAYsF,IAAMtF,IAElC,IAAI0L,EAAOc,iBAAiB,QAASD,EAAO/P,E,EArBtD,SAAsB9B,EAAKwG,EAAQzD,GACjC4K,EAAenH,EAAQ,eACH9C,IAAhB1D,EAAIwG,SAAsD9C,IAA7B1D,EAAIwG,EAASzD,IAC5C+K,EAAYtH,EAAQxG,EAAIoB,QAAU2B,EAAa,G,CAoBjDgP,CAAY/R,EAAKwG,EAAQzD,E,CAG3B,SAAS4K,EAAgB7L,EAAO2P,GAC9B,GAAqB,iBAAV3P,EACT,MAAM,IAAIkP,EAAOgB,qBAAqBP,EAAM,SAAU3P,E,CAI1D,SAASgM,EAAahM,EAAOV,EAAQwC,GACnC,GAAIoE,KAAKiK,MAAMnQ,KAAWA,EAExB,MADA6L,EAAe7L,EAAO8B,GAChB,IAAIoN,EAAOc,iBAAiBlO,GAAQ,SAAU,aAAc9B,GAGpE,GAAIV,EAAS,EACX,MAAM,IAAI4P,EAAOkB,yBAGnB,MAAM,IAAIlB,EAAOc,iBAAiBlO,GAAQ,SACR,MAAMA,EAAO,EAAI,YAAYxC,IAC7BU,E,CAtFpCmP,EAAE,4BACA,SAAUQ,GACR,OAAIA,EACK,GAAGA,gCAGL,gD,GACNpQ,YACL4P,EAAE,wBACA,SAAUQ,EAAMtP,GACd,MAAO,QAAQsP,4DAA+DtP,G,GAC7ER,WACLsP,EAAE,oBACA,SAAU/J,EAAK2K,EAAOM,GACpB,IAAIC,EAAM,iBAAiBlL,sBACvBmL,EAAWF,EAWf,OAVI1L,OAAO6L,UAAUH,IAAUnK,KAAKuK,IAAIJ,GAAS,GAAK,GACpDE,EAAWT,EAAsBrR,OAAO4R,IACd,iBAAVA,IAChBE,EAAW9R,OAAO4R,IACdA,EAAQlG,OAAO,IAAMA,OAAO,KAAOkG,IAAUlG,OAAO,IAAMA,OAAO,QACnEoG,EAAWT,EAAsBS,IAEnCA,GAAY,KAEdD,GAAO,eAAeP,eAAmBQ,IAClCD,C,GACN/Q,YAiEL,MAAMmR,EAAiB,oBAgBvB,SAAShO,EAAazC,EAAQ0F,GAE5B,IAAIW,EADJX,EAAQA,GAASgL,IAEjB,MAAMrR,EAASW,EAAOX,OACtB,IAAIsR,EAAgB,KACpB,MAAM/G,EAAQ,GAEd,IAAK,IAAIvH,EAAI,EAAGA,EAAIhD,IAAUgD,EAAG,CAI/B,GAHAgE,EAAYrG,EAAOsF,WAAWjD,GAG1BgE,EAAY,OAAUA,EAAY,MAAQ,CAE5C,IAAKsK,EAAe,CAElB,GAAItK,EAAY,MAAQ,EAEjBX,GAAS,IAAK,GAAIkE,EAAMvE,KAAK,IAAM,IAAM,KAC9C,Q,CACK,GAAIhD,EAAI,IAAMhD,EAAQ,EAEtBqG,GAAS,IAAK,GAAIkE,EAAMvE,KAAK,IAAM,IAAM,KAC9C,Q,CAIFsL,EAAgBtK,EAEhB,Q,CAIF,GAAIA,EAAY,MAAQ,EACjBX,GAAS,IAAK,GAAIkE,EAAMvE,KAAK,IAAM,IAAM,KAC9CsL,EAAgBtK,EAChB,Q,CAIFA,EAAkE,OAArDsK,EAAgB,OAAU,GAAKtK,EAAY,M,MAC/CsK,IAEJjL,GAAS,IAAK,GAAIkE,EAAMvE,KAAK,IAAM,IAAM,KAMhD,GAHAsL,EAAgB,KAGZtK,EAAY,IAAM,CACpB,IAAKX,GAAS,GAAK,EAAG,MACtBkE,EAAMvE,KAAKgB,E,MACN,GAAIA,EAAY,KAAO,CAC5B,IAAKX,GAAS,GAAK,EAAG,MACtBkE,EAAMvE,KACJgB,GAAa,EAAM,IACP,GAAZA,EAAmB,I,MAEhB,GAAIA,EAAY,MAAS,CAC9B,IAAKX,GAAS,GAAK,EAAG,MACtBkE,EAAMvE,KACJgB,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,I,KAEhB,MAAIA,EAAY,SASrB,MAAM,IAAI1H,MAAM,sBARhB,IAAK+G,GAAS,GAAK,EAAG,MACtBkE,EAAMvE,KACJgB,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAGgB,C,CAIzC,OAAOuD,C,CA4BT,SAASlH,EAAeyC,GACtB,OAAOY,EAAA6K,YAxHT,SAAsBzL,GAMpB,IAFAA,GAFAA,EAAMA,EAAI0L,MAAM,KAAK,IAEX9H,OAAOD,QAAQ2H,EAAmB,KAEpCpR,OAAS,EAAG,MAAO,GAE3B,KAAO8F,EAAI9F,OAAS,GAAM,GACxB8F,GAAY,IAEd,OAAOA,C,CA6GmB2L,CAAY3L,G,CAGxC,SAASF,EAAY8L,EAAKC,EAAKvM,EAAQpF,GACrC,IAAIgD,EACJ,IAAKA,EAAI,EAAGA,EAAIhD,KACVgD,EAAKoC,GAAUuM,EAAI3R,QAAYgD,GAAK0O,EAAI1R,UADpBgD,EAExB2O,EAAI3O,EAAIoC,GAAUsM,EAAI1O,GAExB,OAAOA,C,CAMT,SAAS1B,EAAYY,EAAKM,GACxB,OAAON,aAAeM,GACZ,MAAPN,GAAkC,MAAnBA,EAAI+N,aAA+C,MAAxB/N,EAAI+N,YAAYI,MACzDnO,EAAI+N,YAAYI,OAAS7N,EAAK6N,I,CAEpC,SAAS9N,EAAaL,GAEpB,OAAOA,GAAQA,C,CAKjB,MAAMoI,GAAsB,WAC1B,MAAMsH,EAAW,mBACXC,EAAQ,IAAI/S,MAAM,KACxB,IAAK,IAAIkE,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,MAAM8O,EAAU,GAAJ9O,EACZ,IAAK,IAAIkC,EAAI,EAAGA,EAAI,KAAMA,EACxB2M,EAAMC,EAAM5M,GAAK0M,EAAS5O,GAAK4O,EAAS1M,E,CAG5C,OAAO2M,C,CATmB,GAa5B,SAASvF,GAAoByF,GAC3B,MAAyB,oBAAXlH,OAAyBmH,GAAyBD,C,CAGlE,SAASC,KACP,MAAM,IAAI1S,MAAM,uB,uCCtjElB,IACA2S,EACAC,E,0FADAD,EAiDA,SAAsBE,GACpB,IAAIC,EAcApP,EAbAqP,EAAOC,EAAQH,GACfI,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvB3N,EAAM,IAAI+N,EAVhB,SAAsBN,EAAKI,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,C,CAS9BE,CAAYP,EAAKI,EAAUC,IAEzCG,EAAU,EAGVvQ,EAAMoQ,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKvP,EAAI,EAAGA,EAAIZ,EAAKY,GAAK,EACxBoP,EACEQ,EAAWT,EAAIlM,WAAWjD,KAAO,GAChC4P,EAAUT,EAAIlM,WAAWjD,EAAI,KAAO,GACpC4P,EAAUT,EAAIlM,WAAWjD,EAAI,KAAO,EACrC4P,EAAUT,EAAIlM,WAAWjD,EAAI,IAC/B0B,EAAIiO,KAAaP,GAAQ,GAAM,IAC/B1N,EAAIiO,KAAaP,GAAQ,EAAK,IAC9B1N,EAAIiO,KAAmB,IAANP,EAGK,IAApBI,IACFJ,EACEQ,EAAWT,EAAIlM,WAAWjD,KAAO,EAChC4P,EAAUT,EAAIlM,WAAWjD,EAAI,KAAO,EACvC0B,EAAIiO,KAAmB,IAANP,GAGK,IAApBI,IACFJ,EACEQ,EAAWT,EAAIlM,WAAWjD,KAAO,GAChC4P,EAAUT,EAAIlM,WAAWjD,EAAI,KAAO,EACpC4P,EAAUT,EAAIlM,WAAWjD,EAAI,KAAO,EACvC0B,EAAIiO,KAAaP,GAAQ,EAAK,IAC9B1N,EAAIiO,KAAmB,IAANP,GAGnB,OAAO1N,C,EA3FTwN,EAkHA,SAAwBW,GAQtB,IAPA,IAAIT,EACAhQ,EAAMyQ,EAAM7S,OACZ8S,EAAa1Q,EAAM,EACnB2Q,EAAQ,GACRC,EAAiB,MAGZhQ,EAAI,EAAGiQ,EAAO7Q,EAAM0Q,EAAY9P,EAAIiQ,EAAMjQ,GAAKgQ,EACtDD,EAAM/M,KAAKkN,EAAYL,EAAO7P,EAAGA,EAAKgQ,EAAkBC,EAAOA,EAAQjQ,EAAIgQ,IAI1D,IAAfF,GACFV,EAAMS,EAAMzQ,EAAM,GAClB2Q,EAAM/M,KACJmN,EAAOf,GAAO,GACde,EAAOf,GAAQ,EAAK,IACpB,OAEsB,IAAfU,IACTV,GAAOS,EAAMzQ,EAAM,IAAM,GAAKyQ,EAAMzQ,EAAM,GAC1C2Q,EAAM/M,KACJmN,EAAOf,GAAO,IACde,EAAOf,GAAQ,EAAK,IACpBe,EAAOf,GAAQ,EAAK,IACpB,MAIJ,OAAOW,EAAM1T,KAAK,G,EAzIpB,IALA,IAAI8T,EAAS,GACTP,EAAY,GACZH,EAA4B,oBAAfvS,WAA6BA,WAAapB,MAEvDsU,EAAO,mEACFC,EAAI,EAAGC,EAAMF,EAAKpT,OAAQqT,EAAIC,IAAOD,EAC5CF,EAAOE,GAAKD,EAAKC,GACjBT,EAAUQ,EAAKnN,WAAWoN,IAAMA,EAQlC,SAASf,EAASH,GAChB,IAAI/P,EAAM+P,EAAInS,OAEd,GAAIoC,EAAM,EAAI,EACZ,MAAM,IAAI9C,MAAM,kDAKlB,IAAIiT,EAAWJ,EAAI3N,QAAQ,KAO3B,OANiB,IAAb+N,IAAiBA,EAAWnQ,GAMzB,CAACmQ,EAJcA,IAAanQ,EAC/B,EACA,EAAKmQ,EAAW,E,CAsEtB,SAASW,EAAaL,EAAOrP,EAAOC,GAGlC,IAFA,IAAI2O,EARoBmB,EASpBC,EAAS,GACJxQ,EAAIQ,EAAOR,EAAIS,EAAKT,GAAK,EAChCoP,GACGS,EAAO7P,IAAM,GAAM,WACnB6P,EAAO7P,EAAI,IAAM,EAAK,QACP,IAAf6P,EAAM7P,EAAI,IACbwQ,EAAOxN,KAdFmN,GADiBI,EAeMnB,IAdT,GAAK,IACxBe,EAAOI,GAAO,GAAK,IACnBJ,EAAOI,GAAO,EAAI,IAClBJ,EAAa,GAANI,IAaT,OAAOC,EAAOnU,KAAK,G,CAjGrBuT,EAAU,IAAI3M,WAAW,IAAM,GAC/B2M,EAAU,IAAI3M,WAAW,IAAM,E;yFClB/B,IAAAwN,EAiCAC,E,2EAjCAD,EAAe,SAAUhS,EAAQ2D,EAAQuO,EAAMC,EAAMC,GACnD,IAAIhM,EAAG1D,EACH2P,EAAiB,EAAVD,EAAeD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAQ,EACRjR,EAAI2Q,EAAQE,EAAS,EAAK,EAC1BK,EAAIP,GAAO,EAAK,EAChBQ,EAAI1S,EAAO2D,EAASpC,GAOxB,IALAA,GAAKkR,EAELrM,EAAIsM,GAAM,IAAOF,GAAU,EAC3BE,KAAQF,EACRA,GAASH,EACFG,EAAQ,EAAGpM,EAAS,IAALA,EAAYpG,EAAO2D,EAASpC,GAAIA,GAAKkR,EAAGD,GAAS,GAKvE,IAHA9P,EAAI0D,GAAM,IAAOoM,GAAU,EAC3BpM,KAAQoM,EACRA,GAASL,EACFK,EAAQ,EAAG9P,EAAS,IAALA,EAAY1C,EAAO2D,EAASpC,GAAIA,GAAKkR,EAAGD,GAAS,GAEvE,GAAU,IAANpM,EACFA,EAAI,EAAImM,MACH,IAAInM,IAAMkM,EACf,OAAO5P,EAAIiQ,IAAsB/C,KAAd8C,GAAI,EAAK,GAE5BhQ,GAAQyC,KAAKiG,IAAI,EAAG+G,GACpB/L,GAAQmM,C,CAEV,OAAQG,GAAI,EAAK,GAAKhQ,EAAIyC,KAAKiG,IAAI,EAAGhF,EAAI+L,E,EAG5CF,EAAgB,SAAUjS,EAAQf,EAAO0E,EAAQuO,EAAMC,EAAMC,GAC3D,IAAIhM,EAAG1D,EAAGmC,EACNwN,EAAiB,EAAVD,EAAeD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBM,EAAe,KAATT,EAAchN,KAAKiG,IAAI,GAAG,IAAOjG,KAAKiG,IAAI,GAAG,IAAO,EAC1D7J,EAAI2Q,EAAO,EAAKE,EAAS,EACzBK,EAAIP,EAAO,GAAI,EACfQ,EAAIzT,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQkG,KAAKuK,IAAIzQ,GAEb4T,MAAM5T,IAAUA,IAAU2Q,KAC5BlN,EAAImQ,MAAM5T,GAAS,EAAI,EACvBmH,EAAIkM,IAEJlM,EAAIjB,KAAKiK,MAAMjK,KAAK2N,IAAI7T,GAASkG,KAAK4N,KAClC9T,GAAS4F,EAAIM,KAAKiG,IAAI,GAAIhF,IAAM,IAClCA,IACAvB,GAAK,IAGL5F,GADEmH,EAAImM,GAAS,EACNK,EAAK/N,EAEL+N,EAAKzN,KAAKiG,IAAI,EAAG,EAAImH,IAEpB1N,GAAK,IACfuB,IACAvB,GAAK,GAGHuB,EAAImM,GAASD,GACf5P,EAAI,EACJ0D,EAAIkM,GACKlM,EAAImM,GAAS,GACtB7P,GAAKzD,EAAS4F,EAAK,GAAKM,KAAKiG,IAAI,EAAG+G,GACpC/L,GAAQmM,IAER7P,EAAIzD,EAAQkG,KAAKiG,IAAI,EAAGmH,EAAQ,GAAKpN,KAAKiG,IAAI,EAAG+G,GACjD/L,EAAI,IAID+L,GAAQ,EAAGnS,EAAO2D,EAASpC,GAAS,IAAJmB,EAAUnB,GAAKkR,EAAG/P,GAAK,IAAKyP,GAAQ,GAI3E,IAFA/L,EAAIA,GAAM+L,EAAQzP,EAClB2P,GAAQF,EACDE,EAAO,EAAGrS,EAAO2D,EAASpC,GAAS,IAAJ6E,EAAU7E,GAAKkR,EAAGrM,GAAK,IAAKiM,GAAQ,GAE1ErS,EAAO2D,EAASpC,EAAIkR,IAAU,IAAJC,C,KClFb,MAAAM,EAQdxE,YAAayE,GAMZ,IAAIrE,EACA3P,EAGJ,KAAM2P,EAAM3P,KARZgD,KAAKgR,SAAWA,EAChBhR,KAAKiR,OAASD,EAASlV,QAAQmV,OAC/BjR,KAAKkR,GAAK,IAAIC,SAAUnR,KAAKiR,OAAOlT,QAMdtB,OAAO2U,QAAQpR,KAAKgR,SAASlV,UAE9CkB,aAAiBqU,YAAYC,SAGjCtR,KAAK2M,GAAQ3P,E,CAIf2H,MAAOkC,GAEN,MAAM,IAAIjL,MAAO,wD,CAGlB2V,UAAWnP,GAEV,OAAOpC,KAAKwR,YAAYxR,KAAK2E,MAAMvC,EAAI9F,OAAO,GAAI8F,E,CAGnDoP,YAAaC,EAAarP,GAEzB,IAAK,IAAI9C,EAAY,EAAGA,EAAI8C,EAAI9F,OAAQgD,IACvCU,KAAKkR,GAAGQ,SAASD,EAAInS,EAAG8C,EAAIG,WAAWjD,IAGxC,OADAU,KAAKkR,GAAGQ,SAASD,EAAIrP,EAAI9F,OAAQ,GAC1BmV,C,CAGRE,WAAYF,GAEX,IAAIjW,EAAYiV,EAAc,GAE9B,KAAyC,IAAjCjV,EAAKwE,KAAKkR,GAAGU,SAASH,OAC7BhB,EAAEnO,KAAK7G,OAAOC,aAAaF,IAE5B,OAAOiV,EAAE9U,KAAK,G,CAGfkW,gBAAiBnQ,EAAgBoQ,GAChC,OAAO,IAAIC,aAAa/R,KAAKiR,OAAOlT,OAAQ2D,EAAQoQ,E,MCJtDE,EApDA,CACCC,SAAU,IAAe,EACzBC,eAAgB,IAAe,EAC/BC,YAAa,IAAe,EAC5BC,kBAAmB,IAAe,EAClCC,cAAe,IAAe,EAC9BC,eAAgB,IAAe,EAE/BC,UAAW,IAAe,EAC1BC,YAAa,IAAe,EAC5BC,SAAU,IAAe,EACzBC,YAAa,IAAe,EAC5BC,cAAe,IAAe,EAC9BC,oBAAqB,IAAe,EACpCC,qBAAsB,IAAe,EACrCC,gBAAiB,IAAe,EAChCC,qBAAsB,IAAe,EACrCC,sBAAuB,IAAe,EACtCC,SAAU,IAAe,EACzBC,eAAgB,IAAe,EAC/BC,oBAAqB,IAAe,EACpCC,UAAW,IAAe,EAC1BC,QAAS,IAAe,EACxBC,WAAY,IAAe,EAC3BC,YAAa,IAAe,EAC5BC,QAAS,IAAe,EACxBC,QAAS,IAAe,EACxBC,QAAS,IAAe,EACxBC,SAAU,IAAe,EAEzBC,sBAAuB,IAAe,EACtCC,kBAAmB,IAAe,EAClCC,wBAAyB,IAAe,EACxCC,UAAW,IAAe,EAC1BC,UAAW,IAAe,EAC1BC,cAAe,IAAe,EAC9BC,sBAAuB,IAAe,EACtCC,YAAa,IAAe,EAC5BC,aAAc,IAAe,EAC7BC,iBAAkB,IAAe,EAEjCC,YAAa,IAAe,EAC5BC,UAAW,IAAe,EAC1BC,YAAa,IAAe,EAC5BC,WAAY,IAAe,EAE3BC,YAAa,IAAe,EAC5BC,UAAW,IAAe,EAC1BC,UAAW,IAAe,EAC1BC,cAAe,IAAe,G,aC9BxBC,eAAeC,EAAqBlO,EAAoBmO,GAE9D,MAAMhE,SAAEA,SAAmBK,YAAY4D,YAAapO,EAAO,CAC1DmO,IAAKA,GAAO,GACZE,uBAAwBlD,IAGzB,OAAO,IAAIjB,EAAOC,E,CCzBnBmE,WAAWC,KACX,C,oBACCL,E,gBDgCMD,eAAgCO,EAAaL,GAEnD,OAAOD,EA7BR,SAAwB/V,GACvB,MAAM,CAAGsW,GAAWC,mBAAmBvW,GAAM8O,MAAM,IAAK,GACxD,OAAO,IAAItR,WAAWpB,MAAMkD,KAAKkX,EAAAC,EAAA,CAAKH,IAAUha,KAAMoa,GAAcA,EAAEnT,WAAW,MAAKxE,M,CA2B3D4X,CAAcN,GAAML,E,cASzCF,eAA4Bc,EAAaZ,GAE/C,OAAOD,cAAiCc,MAAMD,IAAME,cAAed,E","sources":["node_modules/.pnpm/atob@2.1.2/node_modules/atob/browser-atob.js","node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js","node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js","node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js","src/module.ts","src/wasi.ts","src/loader.ts","src/_main.ts"],"sourcesContent":["(function (w) {\n  \"use strict\";\n\n  function findBest(atobNative) {\n    // normal window\n    if ('function' === typeof atobNative) { return atobNative; }\n\n\n    // browserify (web worker)\n    if ('function' === typeof Buffer) {\n      return function atobBrowserify(a) {\n        //!! Deliberately using an API that's deprecated in node.js because\n        //!! this file is for browsers and we expect them to cope with it.\n        //!! Discussion: github.com/node-browser-compat/atob/pull/9\n        return new Buffer(a, 'base64').toString('binary');\n      };\n    }\n\n    // ios web worker with base64js\n    if ('object' === typeof w.base64js) {\n      // bufferToBinaryString\n      // https://git.coolaj86.com/coolaj86/unibabel.js/blob/master/index.js#L50\n      return function atobWebWorker_iOS(a) {\n        var buf = w.base64js.b64ToByteArray(a);\n        return Array.prototype.map.call(buf, function (ch) {\n          return String.fromCharCode(ch);\n        }).join('');\n      };\n    }\n\n\t\treturn function () {\n\t\t\t// ios web worker without base64js\n\t\t\tthrow new Error(\"You're probably in an old browser or an iOS webworker.\" +\n\t\t\t\t\" It might help to include beatgammit's base64-js.\");\n    };\n  }\n\n  var atobBest = findBest(w.atob);\n  w.atob = atobBest;\n\n  if ((typeof module === 'object') && module && module.exports) {\n    module.exports = atobBest;\n  }\n}(window));\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\nexport default class Module\n{\n\t[key: string]: any;\n\n\tinstance: WebAssembly.Instance;\n\tmemory: WebAssembly.Memory;\n\tdv: DataView;\n\n\tconstructor (instance: WebAssembly.Instance)\n\t{\n\t\tthis.instance = instance;\n\t\tthis.memory = instance.exports.memory as WebAssembly.Memory;\n\t\tthis.dv = new DataView (this.memory.buffer);\n\n\t\tlet name: string;\n\t\tlet value: any;\n\n\t\t// Copy the exports to the top-level of this module object.\n\t\tfor ([name, value] of Object.entries(this.instance.exports))\n\t\t{\n\t\t\tif (value instanceof WebAssembly.Memory)\n\t\t\t\tcontinue;\n\n\t\t\tthis[name] = value;\n\t\t}\n\t}\n\n\talloc (bytes: number) : number\n\t{\n\t\tthrow new Error ('Method `alloc` not implemented in WebAssembly module.');\n\t}\n\n\tstringNew (str) : number\n\t{\n\t\treturn this.stringWrite(this.alloc(str.length+1), str);\n\t}\n\n\tstringWrite (ptr: number, str: string) : number\n\t{\n\t\tfor (let i: number = 0; i < str.length; i++)\n\t\t\tthis.dv.setUint8(ptr+i, str.charCodeAt(i));\n\n\t\tthis.dv.setUint8(ptr+str.length, 0);\n\t\treturn ptr;\n\t}\n\n\tstringRead (ptr: number) : string\n\t{\n\t\tlet ch: number, s: string[] = [];\n\n\t\twhile ((ch = this.dv.getUint8(ptr++)) != 0)\n\t\t\ts.push(String.fromCharCode(ch));\n\n\t\treturn s.join('');\n\t}\n\n\tmapFloat32Array (offset: number, count: number) : Float32Array {\n\t\treturn new Float32Array(this.memory.buffer, offset, count);\n\t}\n};\n","\nconst wasi =\n{\n\targs_get: () => { return 0; },\n\targs_sizes_get: () => { return 0; },\n\tenviron_get: () => { return 0; },\n\tenviron_sizes_get: () => { return 0; },\n\tclock_res_get: () => { return 0; },\n\tclock_time_get: () => { return 0; },\n\n\tfd_advise: () => { return 0; },\n\tfd_allocate: () => { return 0; },\n\tfd_close: () => { return 0; },\n\tfd_datasync: () => { return 0; },\n\tfd_fdstat_get: () => { return 0; },\n\tfd_fdstat_set_flags: () => { return 0; },\n\tfd_fdstat_set_rights: () => { return 0; },\n\tfd_filestat_get: () => { return 0; },\n\tfd_filestat_set_size: () => { return 0; },\n\tfd_filestat_set_times: () => { return 0; },\n\tfd_pread: () => { return 0; },\n\tfd_prestat_get: () => { return 0; },\n\tfd_prestat_dir_name: () => { return 0; },\n\tfd_pwrite: () => { return 0; },\n\tfd_read: () => { return 0; },\n\tfd_readdir: () => { return 0; },\n\tfd_renumber: () => { return 0; },\n\tfd_seek: () => { return 0; },\n\tfd_sync: () => { return 0; },\n\tfd_tell: () => { return 0; },\n\tfd_write: () => { return 0; },\n\n\tpath_create_directory: () => { return 0; },\n\tpath_filestat_get: () => { return 0; },\n\tpath_filestat_set_times: () => { return 0; },\n\tpath_link: () => { return 0; },\n\tpath_open: () => { return 0; },\n\tpath_readlink: () => { return 0; },\n\tpath_remove_directory: () => { return 0; },\n\tpath_rename: () => { return 0; },\n\tpath_symlink: () => { return 0; },\n\tpath_unlink_file: () => { return 0; },\n\n\tpoll_oneoff: () => { return 0; },\n\tproc_exit: () => { return 0; },\n\tsched_yield: () => { return 0; },\n\trandom_get: () => { return 0; },\n\n\tsock_accept: () => { return 0; },\n\tsock_recv: () => { return 0; },\n\tsock_send: () => { return 0; },\n\tsock_shutdown: () => { return 0; },\n};\n\nexport default wasi;\n","\nimport Module from './module';\nimport wasi from './wasi';\nimport atob from 'atob';\n\n/**\n * Decodes a base-64 data URI and returns an array buffer.\n * @param {string} data\n * @returns {ArrayBuffer}\n */\nfunction decodeDataUri (data: string) {\n\tconst [, content] = decodeURIComponent(data).split(',', 2);\n\treturn new Uint8Array(Array.from(atob(content)).map( (v: string) => v.charCodeAt(0))).buffer;\n}\n\n/**\n * Loads a WebAssembly module from an array buffer and returns an Asyl module.\n * @param {ArrayBuffer} bytes Array buffer containing a WebAssembly binary.\n * @param {Module} env Module imports to pass to the WebAssembly instantiate method.\n * @returns {Promise<Module>}\n */\nexport async function loadFromArrayBuffer (bytes: ArrayBuffer, env?: WebAssembly.ModuleImports) : Promise<Module>\n{\n\tconst { instance } = await WebAssembly.instantiate (bytes, {\n\t\tenv: env ?? { },\n\t\twasi_snapshot_preview1: wasi\n\t});\n\n\treturn new Module(instance);\n}\n\n/**\n * Loads a WebAssembly module from a Data URI and returns an Asyl module.\n * @param uri - Data URI representing the WASM module data.\n * @param env - Module imports to pass to the WebAssembly instantiate method.\n * @returns Promise<Module>\n */\nexport async function loadFromDataUri (uri: string, env?: WebAssembly.ModuleImports) : Promise<Module>\n{\n\treturn loadFromArrayBuffer(decodeDataUri(uri), env);\n}\n\n/**\n * Loads a WebAssembly module from a URL and returns an Asyl module.\n * @param url - URL of the WASM module to load.\n * @param env - Module imports to pass to the WebAssembly instantiate method.\n * @returns Promise<Module>\n */\nexport async function loadFromUrl (url: string, env?: WebAssembly.ModuleImports) : Promise<Module>\n{\n\treturn loadFromArrayBuffer(await (await fetch(url)).arrayBuffer(), env);\n}\n","\nimport { loadFromArrayBuffer, loadFromDataUri, loadFromUrl } from './loader';\n\nglobalThis.asyl =\n{\n\tloadFromArrayBuffer,\n\tloadFromDataUri,\n\tloadFromUrl\n};\n"],"names":["w","atobNative","atobBest","parcelRequire","window","atob","$0bba76dc83cebbbd$require$Buffer","a","toString","base64js","buf","b64ToByteArray","Array","prototype","map","call","ch","String","fromCharCode","join","Error","module","exports","$8dff54558831dec9$export$a143d493d941bafc","$8dff54558831dec9$export$f99ded8fe4b79145","$8dff54558831dec9$var$customInspectSymbol","Symbol","$8dff54558831dec9$var$Buffer","$8dff54558831dec9$var$K_MAX_LENGTH","$8dff54558831dec9$var$createBuffer","length","RangeError","Uint8Array","Object","setPrototypeOf","arg","encodingOrOffset","TypeError","$8dff54558831dec9$var$allocUnsafe","$8dff54558831dec9$var$from","value","string","encoding","isEncoding","$8dff54558831dec9$var$byteLength","actual","write","slice","$8dff54558831dec9$var$fromString","ArrayBuffer","isView","arrayView","$8dff54558831dec9$var$isInstance","copy","$8dff54558831dec9$var$fromArrayBuffer","buffer","byteOffset","byteLength","$8dff54558831dec9$var$fromArrayLike","$8dff54558831dec9$var$fromArrayView","SharedArrayBuffer","valueOf","from","b","obj","isBuffer","len","$8dff54558831dec9$var$checked","undefined","$8dff54558831dec9$var$numberIsNaN","type","isArray","data","$8dff54558831dec9$var$fromObject","toPrimitive","$8dff54558831dec9$var$assertSize","size","array","i","mustMatch","arguments","loweredCase","$8dff54558831dec9$var$utf8ToBytes","$8dff54558831dec9$var$base64ToBytes","toLowerCase","$8dff54558831dec9$var$slowToString","start","end","this","$8dff54558831dec9$var$hexSlice","$8dff54558831dec9$var$utf8Slice","$8dff54558831dec9$var$asciiSlice","$8dff54558831dec9$var$latin1Slice","$8dff54558831dec9$var$base64Slice","$8dff54558831dec9$var$utf16leSlice","$8dff54558831dec9$var$swap","n","m","$8dff54558831dec9$var$bidirectionalIndexOf","val","dir","$8dff54558831dec9$var$arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","$8dff54558831dec9$var$hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","$8dff54558831dec9$var$utf8Write","$8dff54558831dec9$var$blitBuffer","$8dff54558831dec9$var$asciiWrite","str","byteArray","push","charCodeAt","$8dff54558831dec9$var$asciiToBytes","$8dff54558831dec9$var$base64Write","$8dff54558831dec9$var$ucs2Write","units","c","hi","lo","$8dff54558831dec9$var$utf16leToBytes","$6ocIT","fromByteArray","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","$8dff54558831dec9$var$MAX_ARGUMENTS_LENGTH","apply","$8dff54558831dec9$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","$8dff54558831dec9$var$typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","$8dff54558831dec9$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$8dff54558831dec9$var$hexSliceLookupTable","bytes","$8dff54558831dec9$var$checkOffset","ext","$8dff54558831dec9$var$checkInt","$8dff54558831dec9$var$wrtBigUInt64LE","$8dff54558831dec9$var$checkIntBI","BigInt","$8dff54558831dec9$var$wrtBigUInt64BE","$8dff54558831dec9$var$checkIEEE754","$8dff54558831dec9$var$writeFloat","littleEndian","noAssert","$1wLos","$8dff54558831dec9$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$8dff54558831dec9$var$defineBigIntMethod","$8dff54558831dec9$var$validateNumber","first","last","$8dff54558831dec9$var$boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$8dff54558831dec9$var$errors","$8dff54558831dec9$var$E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","$8dff54558831dec9$var$addNumericalSeparator","range","ERR_OUT_OF_RANGE","$8dff54558831dec9$var$checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","$8dff54558831dec9$var$INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","split","$8dff54558831dec9$var$base64clean","src","dst","alphabet","table","i16","fn","$8dff54558831dec9$var$BufferBigIntNotDefined","$4a6eda7d0e4e0857$export$d622b2ad8d90c771","$4a6eda7d0e4e0857$export$6100ba28696e12de","b64","tmp","lens","$4a6eda7d0e4e0857$var$getLens","validLen","placeHoldersLen","$4a6eda7d0e4e0857$var$Arr","$4a6eda7d0e4e0857$var$_byteLength","curByte","$4a6eda7d0e4e0857$var$revLookup","uint8","extraBytes","parts","maxChunkLength","len2","$4a6eda7d0e4e0857$var$encodeChunk","$4a6eda7d0e4e0857$var$lookup","$4a6eda7d0e4e0857$var$code","$4a6eda7d0e4e0857$var$i","$4a6eda7d0e4e0857$var$len","num","output","$11cd8afb6c84e33a$export$aafa59e2e03f2942","$11cd8afb6c84e33a$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","$b3e5e65ca1fc5022$export$2e2bcd8739ae039","instance","memory","dv","DataView","entries","WebAssembly","Memory","stringNew","stringWrite","ptr","setUint8","stringRead","getUint8","mapFloat32Array","count","Float32Array","$15cea03ad435c505$export$2e2bcd8739ae039","args_get","args_sizes_get","environ_get","environ_sizes_get","clock_res_get","clock_time_get","fd_advise","fd_allocate","fd_close","fd_datasync","fd_fdstat_get","fd_fdstat_set_flags","fd_fdstat_set_rights","fd_filestat_get","fd_filestat_set_size","fd_filestat_set_times","fd_pread","fd_prestat_get","fd_prestat_dir_name","fd_pwrite","fd_read","fd_readdir","fd_renumber","fd_seek","fd_sync","fd_tell","fd_write","path_create_directory","path_filestat_get","path_filestat_set_times","path_link","path_open","path_readlink","path_remove_directory","path_rename","path_symlink","path_unlink_file","poll_oneoff","proc_exit","sched_yield","random_get","sock_accept","sock_recv","sock_send","sock_shutdown","async","$953cdf9ae7e8a925$export$56be8ac71ea59800","env","instantiate","wasi_snapshot_preview1","globalThis","asyl","uri","content","decodeURIComponent","$parcel$interopDefault","$10qEq","v","$953cdf9ae7e8a925$var$decodeDataUri","url","fetch","arrayBuffer"],"version":3,"file":"asyl.js.map"}