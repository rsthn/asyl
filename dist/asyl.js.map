{"mappings":"AACA,IAAAA,EACA,CACCC,SAAU,IAAe,EACzBC,eAAgB,IAAe,EAC/BC,YAAa,IAAe,EAC5BC,kBAAmB,IAAe,EAClCC,cAAe,IAAe,EAC9BC,eAAgB,IAAe,EAC/BC,UAAW,IAAe,EAC1BC,YAAa,IAAe,EAC5BC,SAAU,IAAe,EACzBC,YAAa,IAAe,EAC5BC,cAAe,IAAe,EAC9BC,oBAAqB,IAAe,EACpCC,qBAAsB,IAAe,EACrCC,gBAAiB,IAAe,EAChCC,qBAAsB,IAAe,EACrCC,sBAAuB,IAAe,EACtCC,SAAU,IAAe,EACzBC,eAAgB,IAAe,EAC/BC,oBAAqB,IAAe,EACpCC,UAAW,IAAe,EAC1BC,QAAS,IAAe,EACxBC,WAAY,IAAe,EAC3BC,YAAa,IAAe,EAC5BC,QAAS,IAAe,EACxBC,QAAS,IAAe,EACxBC,QAAS,IAAe,EACxBC,SAAU,IAAe,EACzBC,sBAAuB,IAAe,EACtCC,kBAAmB,IAAe,EAClCC,wBAAyB,IAAe,EACxCC,UAAW,IAAe,EAC1BC,UAAW,IAAe,EAC1BC,cAAe,IAAe,EAC9BC,sBAAuB,IAAe,EACtCC,YAAa,IAAe,EAC5BC,aAAc,IAAe,EAC7BC,iBAAkB,IAAe,EACjCC,YAAa,IAAe,EAC5BC,UAAW,IAAe,EAC1BC,YAAa,IAAe,EAC5BC,WAAY,IAAe,EAC3BC,YAAa,IAAe,EAC5BC,UAAW,IAAe,EAC1BC,UAAW,IAAe,EAC1BC,cAAe,IAAe,GC9ChB,MAAAC,EAQdC,YAAaC,GAMZ,IAAIC,EACAC,EAGJ,KAAMD,EAAMC,KARZC,KAAKH,SAAWA,EAChBG,KAAKC,OAASJ,EAASK,QAAQD,OAC/BD,KAAKG,GAAK,IAAIC,SAAUJ,KAAKC,OAAOI,QAMdC,OAAOC,QAAQP,KAAKH,SAASK,UAE9CH,aAAiBS,YAAYC,SAGjCT,KAAKF,GAAQC,E,CAIfW,MAAOC,GAEN,MAAM,IAAIC,MAAO,wD,CAGlBC,UAAWC,GAEV,OAAOd,KAAKe,YAAYf,KAAKU,MAAMI,EAAIE,OAAO,GAAIF,E,CAGnDC,YAAaE,EAAaH,GAEzB,IAAK,IAAII,EAAY,EAAGA,EAAIJ,EAAIE,OAAQE,IACvClB,KAAKG,GAAGgB,SAASF,EAAIC,EAAGJ,EAAIM,WAAWF,IAGxC,OADAlB,KAAKG,GAAGgB,SAASF,EAAIH,EAAIE,OAAQ,GAC1BC,C,CAGRI,WAAYJ,GAEX,IAAIK,EAAYC,EAAc,GAE9B,KAAyC,IAAjCD,EAAKtB,KAAKG,GAAGqB,SAASP,OAC7BM,EAAEE,KAAKC,OAAOC,aAAaL,IAE5B,OAAOC,EAAEK,KAAK,G,ECnDhBC,WAAWC,KACX,CACCC,KCKcC,eAAgBC,EAAaC,GAE3C,IAAIvB,cAAkCwB,MAAMF,IAAMG,cAClD,MAAMvC,SAAEA,SAAmBW,YAAY6B,YAAa1B,EAAO,CAC1DuB,IAAKA,GAAO,GACZI,uBAAwBzF,IAGzB,OAAO,IAAI8C,EAAOE,E","sources":["src/wasi.ts","src/module.ts","src/_asyl.ts","src/loader.ts"],"sourcesContent":["\nexport default\n{\n\targs_get: () => { return 0; },\n\targs_sizes_get: () => { return 0; },\n\tenviron_get: () => { return 0; },\n\tenviron_sizes_get: () => { return 0; },\n\tclock_res_get: () => { return 0; },\n\tclock_time_get: () => { return 0; },\n\tfd_advise: () => { return 0; },\n\tfd_allocate: () => { return 0; },\n\tfd_close: () => { return 0; },\n\tfd_datasync: () => { return 0; },\n\tfd_fdstat_get: () => { return 0; },\n\tfd_fdstat_set_flags: () => { return 0; },\n\tfd_fdstat_set_rights: () => { return 0; },\n\tfd_filestat_get: () => { return 0; },\n\tfd_filestat_set_size: () => { return 0; },\n\tfd_filestat_set_times: () => { return 0; },\n\tfd_pread: () => { return 0; },\n\tfd_prestat_get: () => { return 0; },\n\tfd_prestat_dir_name: () => { return 0; },\n\tfd_pwrite: () => { return 0; },\n\tfd_read: () => { return 0; },\n\tfd_readdir: () => { return 0; },\n\tfd_renumber: () => { return 0; },\n\tfd_seek: () => { return 0; },\n\tfd_sync: () => { return 0; },\n\tfd_tell: () => { return 0; },\n\tfd_write: () => { return 0; },\n\tpath_create_directory: () => { return 0; },\n\tpath_filestat_get: () => { return 0; },\n\tpath_filestat_set_times: () => { return 0; },\n\tpath_link: () => { return 0; },\n\tpath_open: () => { return 0; },\n\tpath_readlink: () => { return 0; },\n\tpath_remove_directory: () => { return 0; },\n\tpath_rename: () => { return 0; },\n\tpath_symlink: () => { return 0; },\n\tpath_unlink_file: () => { return 0; },\n\tpoll_oneoff: () => { return 0; },\n\tproc_exit: () => { return 0; },\n\tsched_yield: () => { return 0; },\n\trandom_get: () => { return 0; },\n\tsock_accept: () => { return 0; },\n\tsock_recv: () => { return 0; },\n\tsock_send: () => { return 0; },\n\tsock_shutdown: () => { return 0; },\n}\n","\nexport default class Module\n{\n\t[key: string]: any;\n\n\tinstance: WebAssembly.Instance;\n\tmemory: WebAssembly.Memory;\n\tdv: DataView;\n\n\tconstructor (instance: WebAssembly.Instance)\n\t{\n\t\tthis.instance = instance;\n\t\tthis.memory = instance.exports.memory as WebAssembly.Memory;\n\t\tthis.dv = new DataView (this.memory.buffer);\n\n\t\tlet name: string;\n\t\tlet value: any;\n\n\t\t// Copy the exports to the top-level of this module object.\n\t\tfor ([name, value] of Object.entries(this.instance.exports))\n\t\t{\n\t\t\tif (value instanceof WebAssembly.Memory)\n\t\t\t\tcontinue;\n\n\t\t\tthis[name] = value;\n\t\t}\n\t}\n\n\talloc (bytes: number) : number\n\t{\n\t\tthrow new Error ('Method `alloc` not implemented in WebAssembly module.');\n\t}\n\n\tstringNew (str) : number\n\t{\n\t\treturn this.stringWrite(this.alloc(str.length+1), str);\n\t}\n\n\tstringWrite (ptr: number, str: string) : number\n\t{\n\t\tfor (let i: number = 0; i < str.length; i++)\n\t\t\tthis.dv.setUint8(ptr+i, str.charCodeAt(i));\n\n\t\tthis.dv.setUint8(ptr+str.length, 0);\n\t\treturn ptr;\n\t}\n\n\tstringRead (ptr: number) : string\n\t{\n\t\tlet ch: number, s: string[] = [];\n\n\t\twhile ((ch = this.dv.getUint8(ptr++)) != 0)\n\t\t\ts.push(String.fromCharCode(ch));\n\n\t\treturn s.join('');\n\t}\n};\n","\nimport { default as load } from './loader';\n\nglobalThis.asyl =\n{\n\tload: load\n};\n","\nimport wasi from './wasi';\nimport Module from './module';\n\n/**\n * Loads a WebAssembly module from a URL and returns an Asyl module.\n * @param url - URL of the WASM module to load.\n * @param env - Module imports to pass to the WebAssembly instantiate method.\n * @returns Promise<Module>\n */\nexport default async function (url: string, env?: WebAssembly.ModuleImports) : Promise<Module>\n{\n\tlet bytes: ArrayBuffer = await (await fetch(url)).arrayBuffer();\n\tconst { instance } = await WebAssembly.instantiate (bytes, {\n\t\tenv: env ?? { },\n\t\twasi_snapshot_preview1: wasi\n\t});\n\n\treturn new Module(instance);\n}\n"],"names":["$15cea03ad435c505$export$2e2bcd8739ae039","args_get","args_sizes_get","environ_get","environ_sizes_get","clock_res_get","clock_time_get","fd_advise","fd_allocate","fd_close","fd_datasync","fd_fdstat_get","fd_fdstat_set_flags","fd_fdstat_set_rights","fd_filestat_get","fd_filestat_set_size","fd_filestat_set_times","fd_pread","fd_prestat_get","fd_prestat_dir_name","fd_pwrite","fd_read","fd_readdir","fd_renumber","fd_seek","fd_sync","fd_tell","fd_write","path_create_directory","path_filestat_get","path_filestat_set_times","path_link","path_open","path_readlink","path_remove_directory","path_rename","path_symlink","path_unlink_file","poll_oneoff","proc_exit","sched_yield","random_get","sock_accept","sock_recv","sock_send","sock_shutdown","$b3e5e65ca1fc5022$export$2e2bcd8739ae039","constructor","instance","name","value","this","memory","exports","dv","DataView","buffer","Object","entries","WebAssembly","Memory","alloc","bytes","Error","stringNew","str","stringWrite","length","ptr","i","setUint8","charCodeAt","stringRead","ch","s","getUint8","push","String","fromCharCode","join","globalThis","asyl","load","async","url","env","fetch","arrayBuffer","instantiate","wasi_snapshot_preview1"],"version":3,"file":"asyl.js.map"}