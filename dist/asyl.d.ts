// Generated by dts-bundle-generator v6.12.0

export declare class Module {
	[key: string]: any;
	instance: WebAssembly.Instance;
	memory: WebAssembly.Memory;
	dv: DataView;
	constructor(instance: WebAssembly.Instance);
	alloc(bytes: number): number;
	stringNew(str: any): number;
	stringWrite(ptr: number, str: string): number;
	stringRead(ptr: number): string;
}
/**
 * Loads a WebAssembly module from a URL and returns an Asyl module.
 * @param url - URL of the WASM module to load.
 * @param env - Module imports to pass to the WebAssembly instantiate method.
 * @returns Promise<Module>
 */
export function load(url: string, env?: WebAssembly.ModuleImports): Promise<Module>;
export declare const wasi: {
	args_get: () => number;
	args_sizes_get: () => number;
	environ_get: () => number;
	environ_sizes_get: () => number;
	clock_res_get: () => number;
	clock_time_get: () => number;
	fd_advise: () => number;
	fd_allocate: () => number;
	fd_close: () => number;
	fd_datasync: () => number;
	fd_fdstat_get: () => number;
	fd_fdstat_set_flags: () => number;
	fd_fdstat_set_rights: () => number;
	fd_filestat_get: () => number;
	fd_filestat_set_size: () => number;
	fd_filestat_set_times: () => number;
	fd_pread: () => number;
	fd_prestat_get: () => number;
	fd_prestat_dir_name: () => number;
	fd_pwrite: () => number;
	fd_read: () => number;
	fd_readdir: () => number;
	fd_renumber: () => number;
	fd_seek: () => number;
	fd_sync: () => number;
	fd_tell: () => number;
	fd_write: () => number;
	path_create_directory: () => number;
	path_filestat_get: () => number;
	path_filestat_set_times: () => number;
	path_link: () => number;
	path_open: () => number;
	path_readlink: () => number;
	path_remove_directory: () => number;
	path_rename: () => number;
	path_symlink: () => number;
	path_unlink_file: () => number;
	poll_oneoff: () => number;
	proc_exit: () => number;
	sched_yield: () => number;
	random_get: () => number;
	sock_accept: () => number;
	sock_recv: () => number;
	sock_send: () => number;
	sock_shutdown: () => number;
};

export as namespace asyl;

export {};
